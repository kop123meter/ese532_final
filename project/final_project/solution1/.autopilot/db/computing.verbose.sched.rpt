

================================================================
== Vitis HLS Report for 'computing'
================================================================
* Date:           Sun Dec 10 19:29:16 2023

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:47 MST 2020)
* Project:        final_project
* Solution:       solution1 (Vitis Kernel Flow Target)
* Product family: zynquplus
* Target device:  xczu3eg-sbva484-1-i


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  6.67 ns|  4.812 ns|     1.80 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------+---------+---------+----------+-----------+-----------+-----------+----------+
        |                     |  Latency (cycles) | Iteration|  Initiation Interval  |    Trip   |          |
        |      Loop Name      |   min   |   max   |  Latency |  achieved |   target  |   Count   | Pipelined|
        +---------------------+---------+---------+----------+-----------+-----------+-----------+----------+
        |- VITIS_LOOP_215_1   |        ?|        ?|         ?|          -|          -|      1 ~ 4|        no|
        | + VITIS_LOOP_224_2  |        0|    25755|         2|          1|          1|  0 ~ 25755|       yes|
        | + VITIS_LOOP_234_3  |    16384|    16384|         1|          1|          1|      16384|       yes|
        | + VITIS_LOOP_241_4  |      512|      512|         1|          1|          1|        512|       yes|
        | + VITIS_LOOP_253_5  |        ?|        ?|        18|         16|          1|          ?|       yes|
        +---------------------+---------+---------+----------+-----------+-----------+-----------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2
  * Pipeline-1: initiation interval (II) = 1, depth = 1
  * Pipeline-2: initiation interval (II) = 1, depth = 1
  * Pipeline-3: initiation interval (II) = 16, depth = 18


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 35
* Pipeline : 4
  Pipeline-0 : II = 1, D = 2, States = { 6 7 }
  Pipeline-1 : II = 1, D = 1, States = { 9 }
  Pipeline-2 : II = 1, D = 1, States = { 11 }
  Pipeline-3 : II = 16, D = 18, States = { 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 32 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 8 7 
7 --> 6 
8 --> 9 
9 --> 10 9 
10 --> 11 
11 --> 12 11 
12 --> 13 
13 --> 35 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 32 33 34 31 
31 --> 14 
32 --> 
33 --> 35 
34 --> 35 
35 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.48>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %output_r, void @empty_2, i32 0, i32 0, void @empty_19, i32 0, i32 0, void @empty_19, void @empty_19, void @empty_19, i32 0, i32 0, i32 0, i32 0, void @empty_19, void @empty_19"   --->   Operation 36 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %input_r, void @empty_2, i32 0, i32 0, void @empty_19, i32 0, i32 0, void @empty_19, void @empty_19, void @empty_19, i32 0, i32 0, i32 0, i32 0, void @empty_19, void @empty_19"   --->   Operation 37 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%temp_chunk = alloca i64 1" [Server/LZW_new.cpp:213]   --->   Operation 38 'alloca' 'temp_chunk' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 8192> <RAM>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%hash_table_0 = alloca i64 1" [Server/LZW_new.cpp:230]   --->   Operation 39 'alloca' 'hash_table_0' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 33> <Depth = 32768> <RAM>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%hash_table_1 = alloca i64 1" [Server/LZW_new.cpp:230]   --->   Operation 40 'alloca' 'hash_table_1' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 33> <Depth = 32768> <RAM>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%my_assoc_mem_upper_key_mem = alloca i64 1" [Server/LZW_new.cpp:231]   --->   Operation 41 'alloca' 'my_assoc_mem_upper_key_mem' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 512> <RAM>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%my_assoc_mem_middle_key_mem = alloca i64 1" [Server/LZW_new.cpp:231]   --->   Operation 42 'alloca' 'my_assoc_mem_middle_key_mem' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 512> <RAM>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%my_assoc_mem_lower_key_mem = alloca i64 1" [Server/LZW_new.cpp:231]   --->   Operation 43 'alloca' 'my_assoc_mem_lower_key_mem' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 512> <RAM>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%my_assoc_mem_value = alloca i64 1" [Server/LZW_new.cpp:231]   --->   Operation 44 'alloca' 'my_assoc_mem_value' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 12> <Depth = 64> <RAM>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%temp_chunk_addr = getelementptr i8 %temp_chunk, i64 0, i64 0"   --->   Operation 45 'getelementptr' 'temp_chunk_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.48ns)   --->   "%br_ln215 = br void" [Server/LZW_new.cpp:215]   --->   Operation 46 'br' 'br_ln215' <Predicate = true> <Delay = 0.48>

State 2 <SV = 1> <Delay = 3.10>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%c = phi i3 0, void, i3 %c_1, void %.loopexit"   --->   Operation 47 'phi' 'c' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i3.i32, i3 %c, i32 2" [Server/LZW_new.cpp:215]   --->   Operation 48 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 1, i64 4, i64 2"   --->   Operation 49 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.74ns)   --->   "%c_1 = add i3 %c, i3 1" [Server/LZW_new.cpp:215]   --->   Operation 50 'add' 'c_1' <Predicate = true> <Delay = 0.74> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%br_ln215 = br i1 %tmp, void %.split15, void %.loopexit12.loopexit112" [Server/LZW_new.cpp:215]   --->   Operation 51 'br' 'br_ln215' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (2.01ns)   --->   "%tmp_26 = read i8 @_ssdm_op_Read.ap_fifo.volatile.i8P0A, i8 %input_r" [/mnt/pollux/software/xilinx/2020.2/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:145]   --->   Operation 52 'read' 'tmp_26' <Predicate = (!tmp)> <Delay = 2.01> <CoreInst = "FIFO">   --->   Core 78 'FIFO' <Latency = 0> <II = 1> <Delay = 2.01> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 8> <Depth = 500> <FIFO>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%zext_ln218 = zext i8 %tmp_26" [Server/LZW_new.cpp:218]   --->   Operation 53 'zext' 'zext_ln218' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 54 [3/3] (1.08ns) (grouped into DSP with root node len)   --->   "%mul_ln220 = mul i15 %zext_ln218, i15 100" [Server/LZW_new.cpp:220]   --->   Operation 54 'mul' 'mul_ln220' <Predicate = (!tmp)> <Delay = 1.08> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%br_ln0 = br void %.loopexit12"   --->   Operation 55 'br' 'br_ln0' <Predicate = (tmp)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 1.08>
ST_3 : Operation 56 [2/3] (1.08ns) (grouped into DSP with root node len)   --->   "%mul_ln220 = mul i15 %zext_ln218, i15 100" [Server/LZW_new.cpp:220]   --->   Operation 56 'mul' 'mul_ln220' <Predicate = true> <Delay = 1.08> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 4 <SV = 3> <Delay = 2.84>
ST_4 : Operation 57 [1/1] (2.01ns)   --->   "%tmp_27 = read i8 @_ssdm_op_Read.ap_fifo.volatile.i8P0A, i8 %input_r" [/mnt/pollux/software/xilinx/2020.2/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:145]   --->   Operation 57 'read' 'tmp_27' <Predicate = true> <Delay = 2.01> <CoreInst = "FIFO">   --->   Core 78 'FIFO' <Latency = 0> <II = 1> <Delay = 2.01> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 8> <Depth = 500> <FIFO>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln219 = zext i8 %tmp_27" [Server/LZW_new.cpp:219]   --->   Operation 58 'zext' 'zext_ln219' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 59 [1/3] (0.00ns) (grouped into DSP with root node len)   --->   "%mul_ln220 = mul i15 %zext_ln218, i15 100" [Server/LZW_new.cpp:220]   --->   Operation 59 'mul' 'mul_ln220' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 60 [2/2] (0.83ns) (root node of the DSP)   --->   "%len = add i15 %mul_ln220, i15 %zext_ln219" [Server/LZW_new.cpp:220]   --->   Operation 60 'add' 'len' <Predicate = true> <Delay = 0.83> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 5 <SV = 4> <Delay = 1.69>
ST_5 : Operation 61 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @empty_16" [/mnt/pollux/software/xilinx/2020.2/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0]   --->   Operation 61 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 62 [1/2] (0.83ns) (root node of the DSP)   --->   "%len = add i15 %mul_ln220, i15 %zext_ln219" [Server/LZW_new.cpp:220]   --->   Operation 62 'add' 'len' <Predicate = true> <Delay = 0.83> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 63 [1/1] (0.86ns)   --->   "%icmp_ln224 = icmp_eq  i15 %len, i15 0" [Server/LZW_new.cpp:224]   --->   Operation 63 'icmp' 'icmp_ln224' <Predicate = true> <Delay = 0.86> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 64 [1/1] (0.48ns)   --->   "%br_ln224 = br void" [Server/LZW_new.cpp:224]   --->   Operation 64 'br' 'br_ln224' <Predicate = true> <Delay = 0.48>

State 6 <SV = 5> <Delay = 1.00>
ST_6 : Operation 65 [1/1] (0.00ns)   --->   "%i = phi i15 %add_ln224, void %.split, i15 0, void %.split15" [Server/LZW_new.cpp:224]   --->   Operation 65 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 66 [1/1] (1.00ns)   --->   "%add_ln224 = add i15 %i, i15 1" [Server/LZW_new.cpp:224]   --->   Operation 66 'add' 'add_ln224' <Predicate = true> <Delay = 1.00> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 67 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 67 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 68 [1/1] (0.86ns)   --->   "%icmp_ln224_1 = icmp_eq  i15 %i, i15 %len" [Server/LZW_new.cpp:224]   --->   Operation 68 'icmp' 'icmp_ln224_1' <Predicate = true> <Delay = 0.86> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 69 [1/1] (0.00ns)   --->   "%empty_46 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 0, i64 25755, i64 0"   --->   Operation 69 'speclooptripcount' 'empty_46' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 70 [1/1] (0.00ns)   --->   "%br_ln224 = br i1 %icmp_ln224_1, void %.split, void %._crit_edge.loopexit.preheader" [Server/LZW_new.cpp:224]   --->   Operation 70 'br' 'br_ln224' <Predicate = true> <Delay = 0.00>

State 7 <SV = 6> <Delay = 3.36>
ST_7 : Operation 71 [1/1] (0.00ns)   --->   "%i_cast = zext i15 %i" [Server/LZW_new.cpp:224]   --->   Operation 71 'zext' 'i_cast' <Predicate = (!icmp_ln224_1)> <Delay = 0.00>
ST_7 : Operation 72 [1/1] (0.00ns)   --->   "%specloopname_ln224 = specloopname void @_ssdm_op_SpecLoopName, void @empty_8" [Server/LZW_new.cpp:224]   --->   Operation 72 'specloopname' 'specloopname_ln224' <Predicate = (!icmp_ln224_1)> <Delay = 0.00>
ST_7 : Operation 73 [1/1] (2.01ns)   --->   "%tmp_3 = read i8 @_ssdm_op_Read.ap_fifo.volatile.i8P0A, i8 %input_r" [/mnt/pollux/software/xilinx/2020.2/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:145]   --->   Operation 73 'read' 'tmp_3' <Predicate = (!icmp_ln224_1)> <Delay = 2.01> <CoreInst = "FIFO">   --->   Core 78 'FIFO' <Latency = 0> <II = 1> <Delay = 2.01> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 8> <Depth = 500> <FIFO>
ST_7 : Operation 74 [1/1] (0.00ns)   --->   "%temp_chunk_addr_1 = getelementptr i8 %temp_chunk, i64 0, i64 %i_cast" [Server/LZW_new.cpp:225]   --->   Operation 74 'getelementptr' 'temp_chunk_addr_1' <Predicate = (!icmp_ln224_1)> <Delay = 0.00>
ST_7 : Operation 75 [1/1] (1.35ns)   --->   "%store_ln225 = store i8 %tmp_3, i13 %temp_chunk_addr_1" [Server/LZW_new.cpp:225]   --->   Operation 75 'store' 'store_ln225' <Predicate = (!icmp_ln224_1)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 8192> <RAM>
ST_7 : Operation 76 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 76 'br' 'br_ln0' <Predicate = (!icmp_ln224_1)> <Delay = 0.00>

State 8 <SV = 6> <Delay = 0.48>
ST_8 : Operation 77 [1/1] (0.48ns)   --->   "%br_ln0 = br void %._crit_edge.loopexit"   --->   Operation 77 'br' 'br_ln0' <Predicate = true> <Delay = 0.48>

State 9 <SV = 7> <Delay = 1.35>
ST_9 : Operation 78 [1/1] (0.00ns)   --->   "%i_1 = phi i16 %add_ln234, void %.split5, i16 0, void %._crit_edge.loopexit.preheader" [Server/LZW_new.cpp:234]   --->   Operation 78 'phi' 'i_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 79 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 79 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 80 [1/1] (0.00ns)   --->   "%tmp_4 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %i_1, i32 15" [Server/LZW_new.cpp:234]   --->   Operation 80 'bitselect' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 81 [1/1] (0.00ns)   --->   "%empty_47 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 16384, i64 16384, i64 16384"   --->   Operation 81 'speclooptripcount' 'empty_47' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 82 [1/1] (0.00ns)   --->   "%br_ln234 = br i1 %tmp_4, void %.split5, void %.preheader.preheader" [Server/LZW_new.cpp:234]   --->   Operation 82 'br' 'br_ln234' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 83 [1/1] (1.01ns)   --->   "%add_ln234 = add i16 %i_1, i16 2" [Server/LZW_new.cpp:234]   --->   Operation 83 'add' 'add_ln234' <Predicate = (!tmp_4)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 84 [1/1] (0.00ns)   --->   "%i_1_cast56 = zext i16 %i_1" [Server/LZW_new.cpp:234]   --->   Operation 84 'zext' 'i_1_cast56' <Predicate = (!tmp_4)> <Delay = 0.00>
ST_9 : Operation 85 [1/1] (0.00ns)   --->   "%empty_48 = trunc i16 %i_1" [Server/LZW_new.cpp:234]   --->   Operation 85 'trunc' 'empty_48' <Predicate = (!tmp_4)> <Delay = 0.00>
ST_9 : Operation 86 [1/1] (0.00ns)   --->   "%specloopname_ln234 = specloopname void @_ssdm_op_SpecLoopName, void @empty" [Server/LZW_new.cpp:234]   --->   Operation 86 'specloopname' 'specloopname_ln234' <Predicate = (!tmp_4)> <Delay = 0.00>
ST_9 : Operation 87 [1/1] (0.00ns)   --->   "%hash_table_0_addr = getelementptr i33 %hash_table_0, i64 0, i64 %i_1_cast56" [Server/LZW_new.cpp:237]   --->   Operation 87 'getelementptr' 'hash_table_0_addr' <Predicate = (!tmp_4)> <Delay = 0.00>
ST_9 : Operation 88 [1/1] (1.35ns)   --->   "%store_ln237 = store i33 0, i15 %hash_table_0_addr" [Server/LZW_new.cpp:237]   --->   Operation 88 'store' 'store_ln237' <Predicate = (!tmp_4)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 33> <Depth = 32768> <RAM>
ST_9 : Operation 89 [1/1] (0.00ns)   --->   "%hash_table_1_addr = getelementptr i33 %hash_table_1, i64 0, i64 %i_1_cast56" [Server/LZW_new.cpp:238]   --->   Operation 89 'getelementptr' 'hash_table_1_addr' <Predicate = (!tmp_4)> <Delay = 0.00>
ST_9 : Operation 90 [1/1] (1.35ns)   --->   "%store_ln238 = store i33 0, i15 %hash_table_1_addr" [Server/LZW_new.cpp:238]   --->   Operation 90 'store' 'store_ln238' <Predicate = (!tmp_4)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 33> <Depth = 32768> <RAM>
ST_9 : Operation 91 [1/1] (0.00ns)   --->   "%or_ln234 = or i15 %empty_48, i15 1" [Server/LZW_new.cpp:234]   --->   Operation 91 'or' 'or_ln234' <Predicate = (!tmp_4)> <Delay = 0.00>
ST_9 : Operation 92 [1/1] (0.00ns)   --->   "%zext_ln237 = zext i15 %or_ln234" [Server/LZW_new.cpp:237]   --->   Operation 92 'zext' 'zext_ln237' <Predicate = (!tmp_4)> <Delay = 0.00>
ST_9 : Operation 93 [1/1] (0.00ns)   --->   "%hash_table_0_addr_1 = getelementptr i33 %hash_table_0, i64 0, i64 %zext_ln237" [Server/LZW_new.cpp:237]   --->   Operation 93 'getelementptr' 'hash_table_0_addr_1' <Predicate = (!tmp_4)> <Delay = 0.00>
ST_9 : Operation 94 [1/1] (1.35ns)   --->   "%store_ln237 = store i33 0, i15 %hash_table_0_addr_1" [Server/LZW_new.cpp:237]   --->   Operation 94 'store' 'store_ln237' <Predicate = (!tmp_4)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 33> <Depth = 32768> <RAM>
ST_9 : Operation 95 [1/1] (0.00ns)   --->   "%hash_table_1_addr_1 = getelementptr i33 %hash_table_1, i64 0, i64 %zext_ln237" [Server/LZW_new.cpp:238]   --->   Operation 95 'getelementptr' 'hash_table_1_addr_1' <Predicate = (!tmp_4)> <Delay = 0.00>
ST_9 : Operation 96 [1/1] (1.35ns)   --->   "%store_ln238 = store i33 0, i15 %hash_table_1_addr_1" [Server/LZW_new.cpp:238]   --->   Operation 96 'store' 'store_ln238' <Predicate = (!tmp_4)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 33> <Depth = 32768> <RAM>
ST_9 : Operation 97 [1/1] (0.00ns)   --->   "%br_ln0 = br void %._crit_edge.loopexit"   --->   Operation 97 'br' 'br_ln0' <Predicate = (!tmp_4)> <Delay = 0.00>

State 10 <SV = 8> <Delay = 0.48>
ST_10 : Operation 98 [1/1] (0.48ns)   --->   "%br_ln0 = br void %.preheader"   --->   Operation 98 'br' 'br_ln0' <Predicate = true> <Delay = 0.48>

State 11 <SV = 9> <Delay = 2.21>
ST_11 : Operation 99 [1/1] (0.00ns)   --->   "%i_2 = phi i10 %add_ln241, void %.split7, i10 0, void %.preheader.preheader" [Server/LZW_new.cpp:241]   --->   Operation 99 'phi' 'i_2' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 100 [1/1] (0.93ns)   --->   "%add_ln241 = add i10 %i_2, i10 1" [Server/LZW_new.cpp:241]   --->   Operation 100 'add' 'add_ln241' <Predicate = true> <Delay = 0.93> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 101 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 101 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 102 [1/1] (0.85ns)   --->   "%icmp_ln241 = icmp_eq  i10 %i_2, i10 512" [Server/LZW_new.cpp:241]   --->   Operation 102 'icmp' 'icmp_ln241' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 103 [1/1] (0.00ns)   --->   "%empty_49 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 512, i64 512, i64 512"   --->   Operation 103 'speclooptripcount' 'empty_49' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 104 [1/1] (0.00ns)   --->   "%br_ln241 = br i1 %icmp_ln241, void %.split7, void" [Server/LZW_new.cpp:241]   --->   Operation 104 'br' 'br_ln241' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 105 [1/1] (0.00ns)   --->   "%i_2_cast = zext i10 %i_2" [Server/LZW_new.cpp:241]   --->   Operation 105 'zext' 'i_2_cast' <Predicate = (!icmp_ln241)> <Delay = 0.00>
ST_11 : Operation 106 [1/1] (0.00ns)   --->   "%specloopname_ln241 = specloopname void @_ssdm_op_SpecLoopName, void @empty_5" [Server/LZW_new.cpp:241]   --->   Operation 106 'specloopname' 'specloopname_ln241' <Predicate = (!icmp_ln241)> <Delay = 0.00>
ST_11 : Operation 107 [1/1] (0.00ns)   --->   "%my_assoc_mem_upper_key_mem_addr = getelementptr i64 %my_assoc_mem_upper_key_mem, i64 0, i64 %i_2_cast" [Server/LZW_new.cpp:243]   --->   Operation 107 'getelementptr' 'my_assoc_mem_upper_key_mem_addr' <Predicate = (!icmp_ln241)> <Delay = 0.00>
ST_11 : Operation 108 [1/1] (1.35ns)   --->   "%store_ln243 = store i64 0, i9 %my_assoc_mem_upper_key_mem_addr" [Server/LZW_new.cpp:243]   --->   Operation 108 'store' 'store_ln243' <Predicate = (!icmp_ln241)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 512> <RAM>
ST_11 : Operation 109 [1/1] (0.00ns)   --->   "%my_assoc_mem_middle_key_mem_addr = getelementptr i64 %my_assoc_mem_middle_key_mem, i64 0, i64 %i_2_cast" [Server/LZW_new.cpp:244]   --->   Operation 109 'getelementptr' 'my_assoc_mem_middle_key_mem_addr' <Predicate = (!icmp_ln241)> <Delay = 0.00>
ST_11 : Operation 110 [1/1] (1.35ns)   --->   "%store_ln244 = store i64 0, i9 %my_assoc_mem_middle_key_mem_addr" [Server/LZW_new.cpp:244]   --->   Operation 110 'store' 'store_ln244' <Predicate = (!icmp_ln241)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 512> <RAM>
ST_11 : Operation 111 [1/1] (0.00ns)   --->   "%my_assoc_mem_lower_key_mem_addr = getelementptr i64 %my_assoc_mem_lower_key_mem, i64 0, i64 %i_2_cast" [Server/LZW_new.cpp:245]   --->   Operation 111 'getelementptr' 'my_assoc_mem_lower_key_mem_addr' <Predicate = (!icmp_ln241)> <Delay = 0.00>
ST_11 : Operation 112 [1/1] (1.35ns)   --->   "%store_ln245 = store i64 0, i9 %my_assoc_mem_lower_key_mem_addr" [Server/LZW_new.cpp:245]   --->   Operation 112 'store' 'store_ln245' <Predicate = (!icmp_ln241)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 512> <RAM>
ST_11 : Operation 113 [1/1] (0.00ns)   --->   "%br_ln0 = br void %.preheader"   --->   Operation 113 'br' 'br_ln0' <Predicate = (!icmp_ln241)> <Delay = 0.00>

State 12 <SV = 10> <Delay = 1.35>
ST_12 : Operation 114 [2/2] (1.35ns)   --->   "%prefix_code = load i13 %temp_chunk_addr" [Server/LZW_new.cpp:248]   --->   Operation 114 'load' 'prefix_code' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 8192> <RAM>

State 13 <SV = 11> <Delay = 1.35>
ST_13 : Operation 115 [1/2] (1.35ns)   --->   "%prefix_code = load i13 %temp_chunk_addr" [Server/LZW_new.cpp:248]   --->   Operation 115 'load' 'prefix_code' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 8192> <RAM>
ST_13 : Operation 116 [1/1] (0.00ns)   --->   "%zext_ln248 = zext i8 %prefix_code" [Server/LZW_new.cpp:248]   --->   Operation 116 'zext' 'zext_ln248' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 117 [1/1] (0.00ns)   --->   "%br_ln253 = br i1 %icmp_ln224, void %.lr.ph24.preheader, void %.loopexit" [Server/LZW_new.cpp:253]   --->   Operation 117 'br' 'br_ln253' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 118 [1/1] (0.48ns)   --->   "%br_ln0 = br void %.lr.ph24"   --->   Operation 118 'br' 'br_ln0' <Predicate = (!icmp_ln224)> <Delay = 0.48>

State 14 <SV = 12> <Delay = 2.35>
ST_14 : Operation 119 [1/1] (0.00ns)   --->   "%i_3 = phi i15 %add_ln255, void %_Z6lookupPA32768_mP9assoc_memjPbPj.exit.thread, i15 0, void %.lr.ph24.preheader" [Server/LZW_new.cpp:255]   --->   Operation 119 'phi' 'i_3' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 120 [1/1] (0.86ns)   --->   "%icmp_ln253 = icmp_ult  i15 %i_3, i15 %len" [Server/LZW_new.cpp:253]   --->   Operation 120 'icmp' 'icmp_ln253' <Predicate = true> <Delay = 0.86> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 121 [1/1] (1.00ns)   --->   "%add_ln255 = add i15 %i_3, i15 1" [Server/LZW_new.cpp:255]   --->   Operation 121 'add' 'add_ln255' <Predicate = true> <Delay = 1.00> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 122 [1/1] (0.00ns)   --->   "%br_ln253 = br i1 %icmp_ln253, void %.loopexit.loopexit, void %.split13" [Server/LZW_new.cpp:253]   --->   Operation 122 'br' 'br_ln253' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 123 [1/1] (0.00ns)   --->   "%zext_ln255 = zext i15 %add_ln255" [Server/LZW_new.cpp:255]   --->   Operation 123 'zext' 'zext_ln255' <Predicate = (icmp_ln253)> <Delay = 0.00>
ST_14 : Operation 124 [1/1] (0.86ns)   --->   "%icmp_ln255 = icmp_eq  i15 %add_ln255, i15 %len" [Server/LZW_new.cpp:255]   --->   Operation 124 'icmp' 'icmp_ln255' <Predicate = (icmp_ln253)> <Delay = 0.86> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 125 [1/1] (0.00ns)   --->   "%br_ln255 = br i1 %icmp_ln255, void %.split9.0, void" [Server/LZW_new.cpp:255]   --->   Operation 125 'br' 'br_ln255' <Predicate = (icmp_ln253)> <Delay = 0.00>
ST_14 : Operation 126 [1/1] (0.00ns)   --->   "%temp_chunk_addr_2 = getelementptr i8 %temp_chunk, i64 0, i64 %zext_ln255" [Server/LZW_new.cpp:260]   --->   Operation 126 'getelementptr' 'temp_chunk_addr_2' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_14 : Operation 127 [2/2] (1.35ns)   --->   "%next_char = load i13 %temp_chunk_addr_2" [Server/LZW_new.cpp:260]   --->   Operation 127 'load' 'next_char' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 8192> <RAM>

State 15 <SV = 13> <Delay = 3.78>
ST_15 : Operation 128 [1/2] (1.35ns)   --->   "%next_char = load i13 %temp_chunk_addr_2" [Server/LZW_new.cpp:260]   --->   Operation 128 'load' 'next_char' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 8192> <RAM>
ST_15 : Operation 129 [1/1] (0.00ns)   --->   "%trunc_ln181 = trunc i8 %next_char" [Server/LZW_new.cpp:181]   --->   Operation 129 'trunc' 'trunc_ln181' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_15 : Operation 130 [1/1] (0.00ns)   --->   "%or_ln = bitconcatenate i11 @_ssdm_op_BitConcatenate.i11.i1.i5.i1.i3.i1, i1 %trunc_ln181, i5 0, i1 %trunc_ln181, i3 0, i1 %trunc_ln181" [Server/LZW_new.cpp:27]   --->   Operation 130 'bitconcatenate' 'or_ln' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_15 : Operation 131 [1/1] (0.00ns)   --->   "%zext_ln25 = zext i11 %or_ln" [Server/LZW_new.cpp:25]   --->   Operation 131 'zext' 'zext_ln25' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_15 : Operation 132 [1/1] (0.00ns)   --->   "%tmp_5 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %next_char, i32 1" [Server/LZW_new.cpp:25]   --->   Operation 132 'bitselect' 'tmp_5' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_15 : Operation 133 [1/1] (0.00ns)   --->   "%zext_ln25_1 = zext i1 %tmp_5" [Server/LZW_new.cpp:25]   --->   Operation 133 'zext' 'zext_ln25_1' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_15 : Operation 134 [1/1] (0.94ns)   --->   "%add_ln25 = add i12 %zext_ln25, i12 %zext_ln25_1" [Server/LZW_new.cpp:25]   --->   Operation 134 'add' 'add_ln25' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 135 [1/1] (0.00ns)   --->   "%zext_ln26 = zext i12 %add_ln25" [Server/LZW_new.cpp:26]   --->   Operation 135 'zext' 'zext_ln26' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_15 : Operation 136 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i22 @_ssdm_op_BitConcatenate.i22.i12.i10, i12 %add_ln25, i10 0" [Server/LZW_new.cpp:26]   --->   Operation 136 'bitconcatenate' 'shl_ln' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_15 : Operation 137 [1/1] (1.08ns)   --->   "%add_ln26 = add i22 %shl_ln, i22 %zext_ln26" [Server/LZW_new.cpp:26]   --->   Operation 137 'add' 'add_ln26' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 138 [1/1] (0.00ns)   --->   "%lshr_ln1 = partselect i16 @_ssdm_op_PartSelect.i16.i22.i32.i32, i22 %add_ln26, i32 6, i32 21" [Server/LZW_new.cpp:27]   --->   Operation 138 'partselect' 'lshr_ln1' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_15 : Operation 139 [1/1] (0.00ns)   --->   "%zext_ln27 = zext i16 %lshr_ln1" [Server/LZW_new.cpp:27]   --->   Operation 139 'zext' 'zext_ln27' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_15 : Operation 140 [1/1] (0.40ns)   --->   "%xor_ln27 = xor i22 %zext_ln27, i22 %add_ln26" [Server/LZW_new.cpp:27]   --->   Operation 140 'xor' 'xor_ln27' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.40> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 141 [1/1] (0.00ns)   --->   "%tmp_6 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %next_char, i32 2" [Server/LZW_new.cpp:25]   --->   Operation 141 'bitselect' 'tmp_6' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_15 : Operation 142 [1/1] (0.00ns)   --->   "%trunc_ln25 = trunc i22 %xor_ln27" [Server/LZW_new.cpp:25]   --->   Operation 142 'trunc' 'trunc_ln25' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_15 : Operation 143 [1/1] (0.00ns)   --->   "%tmp_7 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %next_char, i32 3" [Server/LZW_new.cpp:25]   --->   Operation 143 'bitselect' 'tmp_7' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_15 : Operation 144 [1/1] (0.00ns)   --->   "%tmp_8 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %next_char, i32 4" [Server/LZW_new.cpp:25]   --->   Operation 144 'bitselect' 'tmp_8' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_15 : Operation 145 [1/1] (0.00ns)   --->   "%tmp_9 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %next_char, i32 5" [Server/LZW_new.cpp:25]   --->   Operation 145 'bitselect' 'tmp_9' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_15 : Operation 146 [1/1] (0.00ns)   --->   "%tmp_10 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %next_char, i32 6" [Server/LZW_new.cpp:25]   --->   Operation 146 'bitselect' 'tmp_10' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_15 : Operation 147 [1/1] (0.00ns)   --->   "%tmp_11 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %next_char, i32 7" [Server/LZW_new.cpp:25]   --->   Operation 147 'bitselect' 'tmp_11' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>

State 16 <SV = 14> <Delay = 4.37>
ST_16 : Operation 148 [1/1] (0.00ns)   --->   "%zext_ln25_2 = zext i22 %xor_ln27" [Server/LZW_new.cpp:25]   --->   Operation 148 'zext' 'zext_ln25_2' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_16 : Operation 149 [1/1] (0.00ns)   --->   "%zext_ln25_3 = zext i1 %tmp_6" [Server/LZW_new.cpp:25]   --->   Operation 149 'zext' 'zext_ln25_3' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_16 : Operation 150 [1/1] (0.00ns)   --->   "%zext_ln25_21 = zext i1 %tmp_6" [Server/LZW_new.cpp:25]   --->   Operation 150 'zext' 'zext_ln25_21' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_16 : Operation 151 [1/1] (1.08ns)   --->   "%add_ln25_1 = add i23 %zext_ln25_2, i23 %zext_ln25_3" [Server/LZW_new.cpp:25]   --->   Operation 151 'add' 'add_ln25_1' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 152 [1/1] (0.00ns)   --->   "%zext_ln26_1 = zext i23 %add_ln25_1" [Server/LZW_new.cpp:26]   --->   Operation 152 'zext' 'zext_ln26_1' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_16 : Operation 153 [1/1] (0.00ns)   --->   "%trunc_ln26 = trunc i23 %add_ln25_1" [Server/LZW_new.cpp:26]   --->   Operation 153 'trunc' 'trunc_ln26' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_16 : Operation 154 [1/1] (0.00ns)   --->   "%shl_ln26_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln26, i10 0" [Server/LZW_new.cpp:26]   --->   Operation 154 'bitconcatenate' 'shl_ln26_1' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_16 : Operation 155 [1/1] (0.00ns)   --->   "%zext_ln26_2 = zext i23 %add_ln25_1" [Server/LZW_new.cpp:26]   --->   Operation 155 'zext' 'zext_ln26_2' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_16 : Operation 156 [1/1] (0.00ns)   --->   "%trunc_ln26_12 = trunc i23 %add_ln25_1" [Server/LZW_new.cpp:26]   --->   Operation 156 'trunc' 'trunc_ln26_12' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_16 : Operation 157 [1/1] (0.00ns)   --->   "%trunc_ln3 = bitconcatenate i26 @_ssdm_op_BitConcatenate.i26.i16.i10, i16 %trunc_ln26_12, i10 0" [Server/LZW_new.cpp:26]   --->   Operation 157 'bitconcatenate' 'trunc_ln3' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_16 : Operation 158 [1/1] (1.20ns)   --->   "%add_ln26_1 = add i32 %shl_ln26_1, i32 %zext_ln26_1" [Server/LZW_new.cpp:26]   --->   Operation 158 'add' 'add_ln26_1' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 159 [1/1] (0.00ns)   --->   "%lshr_ln27_1 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %add_ln26_1, i32 6, i32 31" [Server/LZW_new.cpp:27]   --->   Operation 159 'partselect' 'lshr_ln27_1' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_16 : Operation 160 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_2)   --->   "%zext_ln27_1 = zext i26 %lshr_ln27_1" [Server/LZW_new.cpp:27]   --->   Operation 160 'zext' 'zext_ln27_1' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_16 : Operation 161 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln27 = add i15 %trunc_ln25, i15 %zext_ln25_21" [Server/LZW_new.cpp:27]   --->   Operation 161 'add' 'add_ln27' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_16 : Operation 162 [1/1] (0.00ns)   --->   "%trunc_ln27 = trunc i23 %add_ln25_1" [Server/LZW_new.cpp:27]   --->   Operation 162 'trunc' 'trunc_ln27' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_16 : Operation 163 [1/1] (0.00ns)   --->   "%trunc_ln27_2 = bitconcatenate i15 @_ssdm_op_BitConcatenate.i15.i5.i10, i5 %trunc_ln27, i10 0" [Server/LZW_new.cpp:27]   --->   Operation 163 'bitconcatenate' 'trunc_ln27_2' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_16 : Operation 164 [1/1] (1.13ns)   --->   "%add_ln27_1 = add i26 %trunc_ln3, i26 %zext_ln26_2" [Server/LZW_new.cpp:27]   --->   Operation 164 'add' 'add_ln27_1' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.13> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 165 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_2)   --->   "%xor_ln27_1 = xor i32 %zext_ln27_1, i32 %add_ln26_1" [Server/LZW_new.cpp:27]   --->   Operation 165 'xor' 'xor_ln27_1' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 166 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_2)   --->   "%zext_ln25_4 = zext i1 %tmp_7" [Server/LZW_new.cpp:25]   --->   Operation 166 'zext' 'zext_ln25_4' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_16 : Operation 167 [1/1] (0.87ns) (root node of TernaryAdder)   --->   "%add_ln25_19 = add i15 %trunc_ln27_2, i15 %add_ln27" [Server/LZW_new.cpp:25]   --->   Operation 167 'add' 'add_ln25_19' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.87> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_16 : Operation 168 [1/1] (0.00ns)   --->   "%trunc_ln25_1 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %add_ln26_1, i32 6, i32 20" [Server/LZW_new.cpp:25]   --->   Operation 168 'partselect' 'trunc_ln25_1' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_16 : Operation 169 [1/1] (0.33ns)   --->   "%xor_ln25 = xor i26 %lshr_ln27_1, i26 %add_ln27_1" [Server/LZW_new.cpp:25]   --->   Operation 169 'xor' 'xor_ln25' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 170 [1/1] (0.00ns)   --->   "%zext_ln25_22 = zext i1 %tmp_7" [Server/LZW_new.cpp:25]   --->   Operation 170 'zext' 'zext_ln25_22' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_16 : Operation 171 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln25_2 = add i32 %xor_ln27_1, i32 %zext_ln25_4" [Server/LZW_new.cpp:25]   --->   Operation 171 'add' 'add_ln25_2' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 172 [1/1] (0.42ns)   --->   "%xor_ln26 = xor i15 %trunc_ln25_1, i15 %add_ln25_19" [Server/LZW_new.cpp:26]   --->   Operation 172 'xor' 'xor_ln26' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.42> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 173 [1/1] (0.00ns)   --->   "%zext_ln26_3 = zext i1 %tmp_7" [Server/LZW_new.cpp:26]   --->   Operation 173 'zext' 'zext_ln26_3' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_16 : Operation 174 [1/1] (0.00ns)   --->   "%trunc_ln26_14 = trunc i32 %add_ln25_2" [Server/LZW_new.cpp:26]   --->   Operation 174 'trunc' 'trunc_ln26_14' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_16 : Operation 175 [1/1] (0.00ns)   --->   "%trunc_ln26_1 = bitconcatenate i26 @_ssdm_op_BitConcatenate.i26.i16.i10, i16 %trunc_ln26_14, i10 0" [Server/LZW_new.cpp:26]   --->   Operation 175 'bitconcatenate' 'trunc_ln26_1' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_16 : Operation 176 [1/1] (0.00ns)   --->   "%trunc_ln27_3 = trunc i32 %add_ln25_2" [Server/LZW_new.cpp:27]   --->   Operation 176 'trunc' 'trunc_ln27_3' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_16 : Operation 177 [1/1] (0.00ns)   --->   "%trunc_ln27_4 = bitconcatenate i15 @_ssdm_op_BitConcatenate.i15.i5.i10, i5 %trunc_ln27_3, i10 0" [Server/LZW_new.cpp:27]   --->   Operation 177 'bitconcatenate' 'trunc_ln27_4' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_16 : Operation 178 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln27_2 = add i26 %xor_ln25, i26 %zext_ln25_22" [Server/LZW_new.cpp:27]   --->   Operation 178 'add' 'add_ln27_2' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_16 : Operation 179 [1/1] (0.86ns) (root node of TernaryAdder)   --->   "%add_ln27_3 = add i26 %add_ln27_2, i26 %trunc_ln26_1" [Server/LZW_new.cpp:27]   --->   Operation 179 'add' 'add_ln27_3' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.86> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_16 : Operation 180 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln25_20 = add i15 %xor_ln26, i15 %zext_ln26_3" [Server/LZW_new.cpp:25]   --->   Operation 180 'add' 'add_ln25_20' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_16 : Operation 181 [1/1] (0.87ns) (root node of TernaryAdder)   --->   "%add_ln25_21 = add i15 %add_ln25_20, i15 %trunc_ln27_4" [Server/LZW_new.cpp:25]   --->   Operation 181 'add' 'add_ln25_21' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.87> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>

State 17 <SV = 15> <Delay = 4.81>
ST_17 : Operation 182 [1/1] (0.00ns) (grouped into LUT with out node add_ln26_2)   --->   "%shl_ln26 = shl i32 %add_ln25_2, i32 10" [Server/LZW_new.cpp:26]   --->   Operation 182 'shl' 'shl_ln26' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_17 : Operation 183 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln26_2 = add i32 %shl_ln26, i32 %add_ln25_2" [Server/LZW_new.cpp:26]   --->   Operation 183 'add' 'add_ln26_2' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 184 [1/1] (0.00ns)   --->   "%lshr_ln27_2 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %add_ln26_2, i32 6, i32 31" [Server/LZW_new.cpp:27]   --->   Operation 184 'partselect' 'lshr_ln27_2' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_17 : Operation 185 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_3)   --->   "%zext_ln27_2 = zext i26 %lshr_ln27_2" [Server/LZW_new.cpp:27]   --->   Operation 185 'zext' 'zext_ln27_2' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_17 : Operation 186 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_3)   --->   "%xor_ln27_2 = xor i32 %zext_ln27_2, i32 %add_ln26_2" [Server/LZW_new.cpp:27]   --->   Operation 186 'xor' 'xor_ln27_2' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 187 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_3)   --->   "%zext_ln25_5 = zext i1 %tmp_8" [Server/LZW_new.cpp:25]   --->   Operation 187 'zext' 'zext_ln25_5' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_17 : Operation 188 [1/1] (0.00ns)   --->   "%trunc_ln25_2 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %add_ln26_2, i32 6, i32 20" [Server/LZW_new.cpp:25]   --->   Operation 188 'partselect' 'trunc_ln25_2' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_17 : Operation 189 [1/1] (0.33ns)   --->   "%xor_ln25_1 = xor i26 %lshr_ln27_2, i26 %add_ln27_3" [Server/LZW_new.cpp:25]   --->   Operation 189 'xor' 'xor_ln25_1' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 190 [1/1] (0.00ns)   --->   "%zext_ln25_23 = zext i1 %tmp_8" [Server/LZW_new.cpp:25]   --->   Operation 190 'zext' 'zext_ln25_23' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_17 : Operation 191 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln25_3 = add i32 %xor_ln27_2, i32 %zext_ln25_5" [Server/LZW_new.cpp:25]   --->   Operation 191 'add' 'add_ln25_3' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 192 [1/1] (0.00ns) (grouped into LUT with out node add_ln26_3)   --->   "%shl_ln26_2 = shl i32 %add_ln25_3, i32 10" [Server/LZW_new.cpp:26]   --->   Operation 192 'shl' 'shl_ln26_2' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_17 : Operation 193 [1/1] (0.42ns)   --->   "%xor_ln26_1 = xor i15 %trunc_ln25_2, i15 %add_ln25_21" [Server/LZW_new.cpp:26]   --->   Operation 193 'xor' 'xor_ln26_1' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.42> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 194 [1/1] (0.00ns)   --->   "%zext_ln26_4 = zext i1 %tmp_8" [Server/LZW_new.cpp:26]   --->   Operation 194 'zext' 'zext_ln26_4' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_17 : Operation 195 [1/1] (0.00ns)   --->   "%trunc_ln26_16 = trunc i32 %add_ln25_3" [Server/LZW_new.cpp:26]   --->   Operation 195 'trunc' 'trunc_ln26_16' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_17 : Operation 196 [1/1] (0.00ns)   --->   "%trunc_ln26_2 = bitconcatenate i26 @_ssdm_op_BitConcatenate.i26.i16.i10, i16 %trunc_ln26_16, i10 0" [Server/LZW_new.cpp:26]   --->   Operation 196 'bitconcatenate' 'trunc_ln26_2' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_17 : Operation 197 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln26_3 = add i32 %shl_ln26_2, i32 %add_ln25_3" [Server/LZW_new.cpp:26]   --->   Operation 197 'add' 'add_ln26_3' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 198 [1/1] (0.00ns)   --->   "%lshr_ln27_3 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %add_ln26_3, i32 6, i32 31" [Server/LZW_new.cpp:27]   --->   Operation 198 'partselect' 'lshr_ln27_3' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_17 : Operation 199 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_4)   --->   "%zext_ln27_3 = zext i26 %lshr_ln27_3" [Server/LZW_new.cpp:27]   --->   Operation 199 'zext' 'zext_ln27_3' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_17 : Operation 200 [1/1] (0.00ns)   --->   "%trunc_ln27_5 = trunc i32 %add_ln25_3" [Server/LZW_new.cpp:27]   --->   Operation 200 'trunc' 'trunc_ln27_5' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_17 : Operation 201 [1/1] (0.00ns)   --->   "%trunc_ln27_6 = bitconcatenate i15 @_ssdm_op_BitConcatenate.i15.i5.i10, i5 %trunc_ln27_5, i10 0" [Server/LZW_new.cpp:27]   --->   Operation 201 'bitconcatenate' 'trunc_ln27_6' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_17 : Operation 202 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln27_4 = add i26 %xor_ln25_1, i26 %zext_ln25_23" [Server/LZW_new.cpp:27]   --->   Operation 202 'add' 'add_ln27_4' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_17 : Operation 203 [1/1] (0.86ns) (root node of TernaryAdder)   --->   "%add_ln27_5 = add i26 %add_ln27_4, i26 %trunc_ln26_2" [Server/LZW_new.cpp:27]   --->   Operation 203 'add' 'add_ln27_5' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.86> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_17 : Operation 204 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_4)   --->   "%xor_ln27_3 = xor i32 %zext_ln27_3, i32 %add_ln26_3" [Server/LZW_new.cpp:27]   --->   Operation 204 'xor' 'xor_ln27_3' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 205 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_4)   --->   "%zext_ln25_6 = zext i1 %tmp_9" [Server/LZW_new.cpp:25]   --->   Operation 205 'zext' 'zext_ln25_6' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_17 : Operation 206 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln25_22 = add i15 %xor_ln26_1, i15 %zext_ln26_4" [Server/LZW_new.cpp:25]   --->   Operation 206 'add' 'add_ln25_22' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_17 : Operation 207 [1/1] (0.87ns) (root node of TernaryAdder)   --->   "%add_ln25_23 = add i15 %add_ln25_22, i15 %trunc_ln27_6" [Server/LZW_new.cpp:25]   --->   Operation 207 'add' 'add_ln25_23' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.87> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_17 : Operation 208 [1/1] (0.00ns)   --->   "%trunc_ln25_3 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %add_ln26_3, i32 6, i32 20" [Server/LZW_new.cpp:25]   --->   Operation 208 'partselect' 'trunc_ln25_3' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_17 : Operation 209 [1/1] (0.33ns)   --->   "%xor_ln25_2 = xor i26 %lshr_ln27_3, i26 %add_ln27_5" [Server/LZW_new.cpp:25]   --->   Operation 209 'xor' 'xor_ln25_2' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 210 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln25_4 = add i32 %xor_ln27_3, i32 %zext_ln25_6" [Server/LZW_new.cpp:25]   --->   Operation 210 'add' 'add_ln25_4' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 211 [1/1] (0.42ns)   --->   "%xor_ln26_2 = xor i15 %trunc_ln25_3, i15 %add_ln25_23" [Server/LZW_new.cpp:26]   --->   Operation 211 'xor' 'xor_ln26_2' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.42> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 212 [1/1] (0.00ns)   --->   "%trunc_ln26_18 = trunc i32 %add_ln25_4" [Server/LZW_new.cpp:26]   --->   Operation 212 'trunc' 'trunc_ln26_18' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_17 : Operation 213 [1/1] (0.00ns)   --->   "%trunc_ln27_7 = trunc i32 %add_ln25_4" [Server/LZW_new.cpp:27]   --->   Operation 213 'trunc' 'trunc_ln27_7' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>

State 18 <SV = 16> <Delay = 4.81>
ST_18 : Operation 214 [1/1] (0.00ns)   --->   "%zext_ln25_24 = zext i1 %tmp_9" [Server/LZW_new.cpp:25]   --->   Operation 214 'zext' 'zext_ln25_24' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_18 : Operation 215 [1/1] (0.00ns) (grouped into LUT with out node add_ln26_4)   --->   "%shl_ln26_3 = shl i32 %add_ln25_4, i32 10" [Server/LZW_new.cpp:26]   --->   Operation 215 'shl' 'shl_ln26_3' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_18 : Operation 216 [1/1] (0.00ns)   --->   "%zext_ln26_5 = zext i1 %tmp_9" [Server/LZW_new.cpp:26]   --->   Operation 216 'zext' 'zext_ln26_5' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_18 : Operation 217 [1/1] (0.00ns)   --->   "%trunc_ln26_3 = bitconcatenate i26 @_ssdm_op_BitConcatenate.i26.i16.i10, i16 %trunc_ln26_18, i10 0" [Server/LZW_new.cpp:26]   --->   Operation 217 'bitconcatenate' 'trunc_ln26_3' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_18 : Operation 218 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln26_4 = add i32 %shl_ln26_3, i32 %add_ln25_4" [Server/LZW_new.cpp:26]   --->   Operation 218 'add' 'add_ln26_4' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 219 [1/1] (0.00ns)   --->   "%lshr_ln27_4 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %add_ln26_4, i32 6, i32 31" [Server/LZW_new.cpp:27]   --->   Operation 219 'partselect' 'lshr_ln27_4' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_18 : Operation 220 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_5)   --->   "%zext_ln27_4 = zext i26 %lshr_ln27_4" [Server/LZW_new.cpp:27]   --->   Operation 220 'zext' 'zext_ln27_4' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_18 : Operation 221 [1/1] (0.00ns)   --->   "%trunc_ln27_8 = bitconcatenate i15 @_ssdm_op_BitConcatenate.i15.i5.i10, i5 %trunc_ln27_7, i10 0" [Server/LZW_new.cpp:27]   --->   Operation 221 'bitconcatenate' 'trunc_ln27_8' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_18 : Operation 222 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln27_6 = add i26 %xor_ln25_2, i26 %zext_ln25_24" [Server/LZW_new.cpp:27]   --->   Operation 222 'add' 'add_ln27_6' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 223 [1/1] (0.86ns) (root node of TernaryAdder)   --->   "%add_ln27_7 = add i26 %add_ln27_6, i26 %trunc_ln26_3" [Server/LZW_new.cpp:27]   --->   Operation 223 'add' 'add_ln27_7' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.86> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 224 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_5)   --->   "%xor_ln27_4 = xor i32 %zext_ln27_4, i32 %add_ln26_4" [Server/LZW_new.cpp:27]   --->   Operation 224 'xor' 'xor_ln27_4' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 225 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_5)   --->   "%zext_ln25_7 = zext i1 %tmp_10" [Server/LZW_new.cpp:25]   --->   Operation 225 'zext' 'zext_ln25_7' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_18 : Operation 226 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln25_24 = add i15 %xor_ln26_2, i15 %zext_ln26_5" [Server/LZW_new.cpp:25]   --->   Operation 226 'add' 'add_ln25_24' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 227 [1/1] (0.87ns) (root node of TernaryAdder)   --->   "%add_ln25_25 = add i15 %add_ln25_24, i15 %trunc_ln27_8" [Server/LZW_new.cpp:25]   --->   Operation 227 'add' 'add_ln25_25' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.87> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 228 [1/1] (0.00ns)   --->   "%trunc_ln25_4 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %add_ln26_4, i32 6, i32 20" [Server/LZW_new.cpp:25]   --->   Operation 228 'partselect' 'trunc_ln25_4' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_18 : Operation 229 [1/1] (0.33ns)   --->   "%xor_ln25_3 = xor i26 %lshr_ln27_4, i26 %add_ln27_7" [Server/LZW_new.cpp:25]   --->   Operation 229 'xor' 'xor_ln25_3' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 230 [1/1] (0.00ns)   --->   "%zext_ln25_25 = zext i1 %tmp_10" [Server/LZW_new.cpp:25]   --->   Operation 230 'zext' 'zext_ln25_25' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_18 : Operation 231 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln25_5 = add i32 %xor_ln27_4, i32 %zext_ln25_7" [Server/LZW_new.cpp:25]   --->   Operation 231 'add' 'add_ln25_5' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 232 [1/1] (0.00ns) (grouped into LUT with out node add_ln26_5)   --->   "%shl_ln26_4 = shl i32 %add_ln25_5, i32 10" [Server/LZW_new.cpp:26]   --->   Operation 232 'shl' 'shl_ln26_4' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_18 : Operation 233 [1/1] (0.42ns)   --->   "%xor_ln26_3 = xor i15 %trunc_ln25_4, i15 %add_ln25_25" [Server/LZW_new.cpp:26]   --->   Operation 233 'xor' 'xor_ln26_3' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.42> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 234 [1/1] (0.00ns)   --->   "%zext_ln26_6 = zext i1 %tmp_10" [Server/LZW_new.cpp:26]   --->   Operation 234 'zext' 'zext_ln26_6' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_18 : Operation 235 [1/1] (0.00ns)   --->   "%trunc_ln26_20 = trunc i32 %add_ln25_5" [Server/LZW_new.cpp:26]   --->   Operation 235 'trunc' 'trunc_ln26_20' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_18 : Operation 236 [1/1] (0.00ns)   --->   "%trunc_ln26_4 = bitconcatenate i26 @_ssdm_op_BitConcatenate.i26.i16.i10, i16 %trunc_ln26_20, i10 0" [Server/LZW_new.cpp:26]   --->   Operation 236 'bitconcatenate' 'trunc_ln26_4' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_18 : Operation 237 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln26_5 = add i32 %shl_ln26_4, i32 %add_ln25_5" [Server/LZW_new.cpp:26]   --->   Operation 237 'add' 'add_ln26_5' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 238 [1/1] (0.00ns)   --->   "%lshr_ln27_5 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %add_ln26_5, i32 6, i32 31" [Server/LZW_new.cpp:27]   --->   Operation 238 'partselect' 'lshr_ln27_5' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_18 : Operation 239 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_6)   --->   "%zext_ln27_5 = zext i26 %lshr_ln27_5" [Server/LZW_new.cpp:27]   --->   Operation 239 'zext' 'zext_ln27_5' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_18 : Operation 240 [1/1] (0.00ns)   --->   "%trunc_ln27_9 = trunc i32 %add_ln25_5" [Server/LZW_new.cpp:27]   --->   Operation 240 'trunc' 'trunc_ln27_9' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_18 : Operation 241 [1/1] (0.00ns)   --->   "%trunc_ln27_s = bitconcatenate i15 @_ssdm_op_BitConcatenate.i15.i5.i10, i5 %trunc_ln27_9, i10 0" [Server/LZW_new.cpp:27]   --->   Operation 241 'bitconcatenate' 'trunc_ln27_s' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_18 : Operation 242 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln27_8 = add i26 %xor_ln25_3, i26 %zext_ln25_25" [Server/LZW_new.cpp:27]   --->   Operation 242 'add' 'add_ln27_8' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 243 [1/1] (0.86ns) (root node of TernaryAdder)   --->   "%add_ln27_9 = add i26 %add_ln27_8, i26 %trunc_ln26_4" [Server/LZW_new.cpp:27]   --->   Operation 243 'add' 'add_ln27_9' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.86> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 244 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_6)   --->   "%xor_ln27_5 = xor i32 %zext_ln27_5, i32 %add_ln26_5" [Server/LZW_new.cpp:27]   --->   Operation 244 'xor' 'xor_ln27_5' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 245 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_6)   --->   "%zext_ln25_8 = zext i1 %tmp_11" [Server/LZW_new.cpp:25]   --->   Operation 245 'zext' 'zext_ln25_8' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_18 : Operation 246 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln25_26 = add i15 %xor_ln26_3, i15 %zext_ln26_6" [Server/LZW_new.cpp:25]   --->   Operation 246 'add' 'add_ln25_26' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 247 [1/1] (0.87ns) (root node of TernaryAdder)   --->   "%add_ln25_27 = add i15 %add_ln25_26, i15 %trunc_ln27_s" [Server/LZW_new.cpp:25]   --->   Operation 247 'add' 'add_ln25_27' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.87> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 248 [1/1] (0.00ns)   --->   "%trunc_ln25_5 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %add_ln26_5, i32 6, i32 20" [Server/LZW_new.cpp:25]   --->   Operation 248 'partselect' 'trunc_ln25_5' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_18 : Operation 249 [1/1] (0.33ns)   --->   "%xor_ln25_4 = xor i26 %lshr_ln27_5, i26 %add_ln27_9" [Server/LZW_new.cpp:25]   --->   Operation 249 'xor' 'xor_ln25_4' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 250 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln25_6 = add i32 %xor_ln27_5, i32 %zext_ln25_8" [Server/LZW_new.cpp:25]   --->   Operation 250 'add' 'add_ln25_6' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 251 [1/1] (0.42ns)   --->   "%xor_ln26_4 = xor i15 %trunc_ln25_5, i15 %add_ln25_27" [Server/LZW_new.cpp:26]   --->   Operation 251 'xor' 'xor_ln26_4' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.42> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 252 [1/1] (0.00ns)   --->   "%trunc_ln26_22 = trunc i32 %add_ln25_6" [Server/LZW_new.cpp:26]   --->   Operation 252 'trunc' 'trunc_ln26_22' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_18 : Operation 253 [1/1] (0.00ns)   --->   "%trunc_ln27_10 = trunc i32 %add_ln25_6" [Server/LZW_new.cpp:27]   --->   Operation 253 'trunc' 'trunc_ln27_10' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>

State 19 <SV = 17> <Delay = 4.81>
ST_19 : Operation 254 [1/1] (0.00ns)   --->   "%prefix_code_2 = phi i16 %prefix_code_1, void %_Z6lookupPA32768_mP9assoc_memjPbPj.exit.thread, i16 %zext_ln248, void %.lr.ph24.preheader"   --->   Operation 254 'phi' 'prefix_code_2' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 255 [1/1] (0.00ns)   --->   "%trunc_ln262_1 = trunc i16 %prefix_code_2" [Server/LZW_new.cpp:262]   --->   Operation 255 'trunc' 'trunc_ln262_1' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_19 : Operation 256 [1/1] (0.00ns)   --->   "%zext_ln25_26 = zext i1 %tmp_11" [Server/LZW_new.cpp:25]   --->   Operation 256 'zext' 'zext_ln25_26' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_19 : Operation 257 [1/1] (0.00ns) (grouped into LUT with out node add_ln26_6)   --->   "%shl_ln26_5 = shl i32 %add_ln25_6, i32 10" [Server/LZW_new.cpp:26]   --->   Operation 257 'shl' 'shl_ln26_5' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_19 : Operation 258 [1/1] (0.00ns)   --->   "%zext_ln26_7 = zext i1 %tmp_11" [Server/LZW_new.cpp:26]   --->   Operation 258 'zext' 'zext_ln26_7' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_19 : Operation 259 [1/1] (0.00ns)   --->   "%trunc_ln26_5 = bitconcatenate i26 @_ssdm_op_BitConcatenate.i26.i16.i10, i16 %trunc_ln26_22, i10 0" [Server/LZW_new.cpp:26]   --->   Operation 259 'bitconcatenate' 'trunc_ln26_5' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_19 : Operation 260 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln26_6 = add i32 %shl_ln26_5, i32 %add_ln25_6" [Server/LZW_new.cpp:26]   --->   Operation 260 'add' 'add_ln26_6' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 261 [1/1] (0.00ns)   --->   "%lshr_ln27_6 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %add_ln26_6, i32 6, i32 31" [Server/LZW_new.cpp:27]   --->   Operation 261 'partselect' 'lshr_ln27_6' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_19 : Operation 262 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_7)   --->   "%zext_ln27_6 = zext i26 %lshr_ln27_6" [Server/LZW_new.cpp:27]   --->   Operation 262 'zext' 'zext_ln27_6' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_19 : Operation 263 [1/1] (0.00ns)   --->   "%trunc_ln27_11 = bitconcatenate i15 @_ssdm_op_BitConcatenate.i15.i5.i10, i5 %trunc_ln27_10, i10 0" [Server/LZW_new.cpp:27]   --->   Operation 263 'bitconcatenate' 'trunc_ln27_11' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_19 : Operation 264 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln27_10 = add i26 %xor_ln25_4, i26 %zext_ln25_26" [Server/LZW_new.cpp:27]   --->   Operation 264 'add' 'add_ln27_10' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_19 : Operation 265 [1/1] (0.86ns) (root node of TernaryAdder)   --->   "%add_ln27_11 = add i26 %add_ln27_10, i26 %trunc_ln26_5" [Server/LZW_new.cpp:27]   --->   Operation 265 'add' 'add_ln27_11' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.86> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_19 : Operation 266 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_7)   --->   "%xor_ln27_6 = xor i32 %zext_ln27_6, i32 %add_ln26_6" [Server/LZW_new.cpp:27]   --->   Operation 266 'xor' 'xor_ln27_6' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 267 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_7)   --->   "%zext_ln25_9 = zext i1 %trunc_ln262_1" [Server/LZW_new.cpp:25]   --->   Operation 267 'zext' 'zext_ln25_9' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_19 : Operation 268 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln25_28 = add i15 %xor_ln26_4, i15 %zext_ln26_7" [Server/LZW_new.cpp:25]   --->   Operation 268 'add' 'add_ln25_28' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_19 : Operation 269 [1/1] (0.87ns) (root node of TernaryAdder)   --->   "%add_ln25_29 = add i15 %add_ln25_28, i15 %trunc_ln27_11" [Server/LZW_new.cpp:25]   --->   Operation 269 'add' 'add_ln25_29' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.87> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_19 : Operation 270 [1/1] (0.00ns)   --->   "%trunc_ln25_6 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %add_ln26_6, i32 6, i32 20" [Server/LZW_new.cpp:25]   --->   Operation 270 'partselect' 'trunc_ln25_6' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_19 : Operation 271 [1/1] (0.33ns)   --->   "%xor_ln25_5 = xor i26 %lshr_ln27_6, i26 %add_ln27_11" [Server/LZW_new.cpp:25]   --->   Operation 271 'xor' 'xor_ln25_5' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 272 [1/1] (0.00ns)   --->   "%zext_ln25_27 = zext i1 %trunc_ln262_1" [Server/LZW_new.cpp:25]   --->   Operation 272 'zext' 'zext_ln25_27' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_19 : Operation 273 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln25_7 = add i32 %xor_ln27_6, i32 %zext_ln25_9" [Server/LZW_new.cpp:25]   --->   Operation 273 'add' 'add_ln25_7' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 274 [1/1] (0.00ns) (grouped into LUT with out node add_ln26_7)   --->   "%shl_ln26_6 = shl i32 %add_ln25_7, i32 10" [Server/LZW_new.cpp:26]   --->   Operation 274 'shl' 'shl_ln26_6' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_19 : Operation 275 [1/1] (0.42ns)   --->   "%xor_ln26_5 = xor i15 %trunc_ln25_6, i15 %add_ln25_29" [Server/LZW_new.cpp:26]   --->   Operation 275 'xor' 'xor_ln26_5' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.42> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 276 [1/1] (0.00ns)   --->   "%zext_ln26_8 = zext i1 %trunc_ln262_1" [Server/LZW_new.cpp:26]   --->   Operation 276 'zext' 'zext_ln26_8' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_19 : Operation 277 [1/1] (0.00ns)   --->   "%trunc_ln26_23 = trunc i32 %add_ln25_7" [Server/LZW_new.cpp:26]   --->   Operation 277 'trunc' 'trunc_ln26_23' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_19 : Operation 278 [1/1] (0.00ns)   --->   "%trunc_ln26_6 = bitconcatenate i26 @_ssdm_op_BitConcatenate.i26.i16.i10, i16 %trunc_ln26_23, i10 0" [Server/LZW_new.cpp:26]   --->   Operation 278 'bitconcatenate' 'trunc_ln26_6' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_19 : Operation 279 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln26_7 = add i32 %shl_ln26_6, i32 %add_ln25_7" [Server/LZW_new.cpp:26]   --->   Operation 279 'add' 'add_ln26_7' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 280 [1/1] (0.00ns)   --->   "%lshr_ln27_7 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %add_ln26_7, i32 6, i32 31" [Server/LZW_new.cpp:27]   --->   Operation 280 'partselect' 'lshr_ln27_7' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_19 : Operation 281 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_8)   --->   "%zext_ln27_7 = zext i26 %lshr_ln27_7" [Server/LZW_new.cpp:27]   --->   Operation 281 'zext' 'zext_ln27_7' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_19 : Operation 282 [1/1] (0.00ns)   --->   "%trunc_ln27_12 = trunc i32 %add_ln25_7" [Server/LZW_new.cpp:27]   --->   Operation 282 'trunc' 'trunc_ln27_12' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_19 : Operation 283 [1/1] (0.00ns)   --->   "%trunc_ln27_13 = bitconcatenate i15 @_ssdm_op_BitConcatenate.i15.i5.i10, i5 %trunc_ln27_12, i10 0" [Server/LZW_new.cpp:27]   --->   Operation 283 'bitconcatenate' 'trunc_ln27_13' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_19 : Operation 284 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln27_12 = add i26 %xor_ln25_5, i26 %zext_ln25_27" [Server/LZW_new.cpp:27]   --->   Operation 284 'add' 'add_ln27_12' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_19 : Operation 285 [1/1] (0.86ns) (root node of TernaryAdder)   --->   "%add_ln27_13 = add i26 %add_ln27_12, i26 %trunc_ln26_6" [Server/LZW_new.cpp:27]   --->   Operation 285 'add' 'add_ln27_13' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.86> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_19 : Operation 286 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_8)   --->   "%xor_ln27_7 = xor i32 %zext_ln27_7, i32 %add_ln26_7" [Server/LZW_new.cpp:27]   --->   Operation 286 'xor' 'xor_ln27_7' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 287 [1/1] (0.00ns)   --->   "%tmp_12 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %prefix_code_2, i32 1" [Server/LZW_new.cpp:25]   --->   Operation 287 'bitselect' 'tmp_12' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_19 : Operation 288 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_8)   --->   "%zext_ln25_10 = zext i1 %tmp_12" [Server/LZW_new.cpp:25]   --->   Operation 288 'zext' 'zext_ln25_10' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_19 : Operation 289 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln25_30 = add i15 %xor_ln26_5, i15 %zext_ln26_8" [Server/LZW_new.cpp:25]   --->   Operation 289 'add' 'add_ln25_30' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_19 : Operation 290 [1/1] (0.87ns) (root node of TernaryAdder)   --->   "%add_ln25_31 = add i15 %add_ln25_30, i15 %trunc_ln27_13" [Server/LZW_new.cpp:25]   --->   Operation 290 'add' 'add_ln25_31' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.87> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_19 : Operation 291 [1/1] (0.00ns)   --->   "%trunc_ln25_7 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %add_ln26_7, i32 6, i32 20" [Server/LZW_new.cpp:25]   --->   Operation 291 'partselect' 'trunc_ln25_7' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_19 : Operation 292 [1/1] (0.33ns)   --->   "%xor_ln25_6 = xor i26 %lshr_ln27_7, i26 %add_ln27_13" [Server/LZW_new.cpp:25]   --->   Operation 292 'xor' 'xor_ln25_6' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 293 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln25_8 = add i32 %xor_ln27_7, i32 %zext_ln25_10" [Server/LZW_new.cpp:25]   --->   Operation 293 'add' 'add_ln25_8' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 294 [1/1] (0.42ns)   --->   "%xor_ln26_6 = xor i15 %trunc_ln25_7, i15 %add_ln25_31" [Server/LZW_new.cpp:26]   --->   Operation 294 'xor' 'xor_ln26_6' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.42> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 295 [1/1] (0.00ns)   --->   "%trunc_ln26_24 = trunc i32 %add_ln25_8" [Server/LZW_new.cpp:26]   --->   Operation 295 'trunc' 'trunc_ln26_24' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_19 : Operation 296 [1/1] (0.00ns)   --->   "%trunc_ln27_14 = trunc i32 %add_ln25_8" [Server/LZW_new.cpp:27]   --->   Operation 296 'trunc' 'trunc_ln27_14' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>

State 20 <SV = 18> <Delay = 4.81>
ST_20 : Operation 297 [1/1] (0.00ns)   --->   "%zext_ln25_28 = zext i1 %tmp_12" [Server/LZW_new.cpp:25]   --->   Operation 297 'zext' 'zext_ln25_28' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_20 : Operation 298 [1/1] (0.00ns) (grouped into LUT with out node add_ln26_8)   --->   "%shl_ln26_7 = shl i32 %add_ln25_8, i32 10" [Server/LZW_new.cpp:26]   --->   Operation 298 'shl' 'shl_ln26_7' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_20 : Operation 299 [1/1] (0.00ns)   --->   "%zext_ln26_9 = zext i1 %tmp_12" [Server/LZW_new.cpp:26]   --->   Operation 299 'zext' 'zext_ln26_9' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_20 : Operation 300 [1/1] (0.00ns)   --->   "%trunc_ln26_7 = bitconcatenate i26 @_ssdm_op_BitConcatenate.i26.i16.i10, i16 %trunc_ln26_24, i10 0" [Server/LZW_new.cpp:26]   --->   Operation 300 'bitconcatenate' 'trunc_ln26_7' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_20 : Operation 301 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln26_8 = add i32 %shl_ln26_7, i32 %add_ln25_8" [Server/LZW_new.cpp:26]   --->   Operation 301 'add' 'add_ln26_8' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 302 [1/1] (0.00ns)   --->   "%lshr_ln27_8 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %add_ln26_8, i32 6, i32 31" [Server/LZW_new.cpp:27]   --->   Operation 302 'partselect' 'lshr_ln27_8' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_20 : Operation 303 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_9)   --->   "%zext_ln27_8 = zext i26 %lshr_ln27_8" [Server/LZW_new.cpp:27]   --->   Operation 303 'zext' 'zext_ln27_8' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_20 : Operation 304 [1/1] (0.00ns)   --->   "%trunc_ln27_15 = bitconcatenate i15 @_ssdm_op_BitConcatenate.i15.i5.i10, i5 %trunc_ln27_14, i10 0" [Server/LZW_new.cpp:27]   --->   Operation 304 'bitconcatenate' 'trunc_ln27_15' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_20 : Operation 305 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln27_14 = add i26 %xor_ln25_6, i26 %zext_ln25_28" [Server/LZW_new.cpp:27]   --->   Operation 305 'add' 'add_ln27_14' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_20 : Operation 306 [1/1] (0.86ns) (root node of TernaryAdder)   --->   "%add_ln27_15 = add i26 %add_ln27_14, i26 %trunc_ln26_7" [Server/LZW_new.cpp:27]   --->   Operation 306 'add' 'add_ln27_15' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.86> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_20 : Operation 307 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_9)   --->   "%xor_ln27_8 = xor i32 %zext_ln27_8, i32 %add_ln26_8" [Server/LZW_new.cpp:27]   --->   Operation 307 'xor' 'xor_ln27_8' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 308 [1/1] (0.00ns)   --->   "%tmp_13 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %prefix_code_2, i32 2" [Server/LZW_new.cpp:25]   --->   Operation 308 'bitselect' 'tmp_13' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_20 : Operation 309 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_9)   --->   "%zext_ln25_11 = zext i1 %tmp_13" [Server/LZW_new.cpp:25]   --->   Operation 309 'zext' 'zext_ln25_11' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_20 : Operation 310 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln25_32 = add i15 %xor_ln26_6, i15 %zext_ln26_9" [Server/LZW_new.cpp:25]   --->   Operation 310 'add' 'add_ln25_32' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_20 : Operation 311 [1/1] (0.87ns) (root node of TernaryAdder)   --->   "%add_ln25_33 = add i15 %add_ln25_32, i15 %trunc_ln27_15" [Server/LZW_new.cpp:25]   --->   Operation 311 'add' 'add_ln25_33' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.87> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_20 : Operation 312 [1/1] (0.00ns)   --->   "%trunc_ln25_8 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %add_ln26_8, i32 6, i32 20" [Server/LZW_new.cpp:25]   --->   Operation 312 'partselect' 'trunc_ln25_8' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_20 : Operation 313 [1/1] (0.33ns)   --->   "%xor_ln25_7 = xor i26 %lshr_ln27_8, i26 %add_ln27_15" [Server/LZW_new.cpp:25]   --->   Operation 313 'xor' 'xor_ln25_7' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 314 [1/1] (0.00ns)   --->   "%zext_ln25_29 = zext i1 %tmp_13" [Server/LZW_new.cpp:25]   --->   Operation 314 'zext' 'zext_ln25_29' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_20 : Operation 315 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln25_9 = add i32 %xor_ln27_8, i32 %zext_ln25_11" [Server/LZW_new.cpp:25]   --->   Operation 315 'add' 'add_ln25_9' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 316 [1/1] (0.00ns) (grouped into LUT with out node add_ln26_9)   --->   "%shl_ln26_8 = shl i32 %add_ln25_9, i32 10" [Server/LZW_new.cpp:26]   --->   Operation 316 'shl' 'shl_ln26_8' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_20 : Operation 317 [1/1] (0.42ns)   --->   "%xor_ln26_7 = xor i15 %trunc_ln25_8, i15 %add_ln25_33" [Server/LZW_new.cpp:26]   --->   Operation 317 'xor' 'xor_ln26_7' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.42> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 318 [1/1] (0.00ns)   --->   "%zext_ln26_10 = zext i1 %tmp_13" [Server/LZW_new.cpp:26]   --->   Operation 318 'zext' 'zext_ln26_10' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_20 : Operation 319 [1/1] (0.00ns)   --->   "%trunc_ln26_25 = trunc i32 %add_ln25_9" [Server/LZW_new.cpp:26]   --->   Operation 319 'trunc' 'trunc_ln26_25' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_20 : Operation 320 [1/1] (0.00ns)   --->   "%trunc_ln26_8 = bitconcatenate i26 @_ssdm_op_BitConcatenate.i26.i16.i10, i16 %trunc_ln26_25, i10 0" [Server/LZW_new.cpp:26]   --->   Operation 320 'bitconcatenate' 'trunc_ln26_8' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_20 : Operation 321 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln26_9 = add i32 %shl_ln26_8, i32 %add_ln25_9" [Server/LZW_new.cpp:26]   --->   Operation 321 'add' 'add_ln26_9' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 322 [1/1] (0.00ns)   --->   "%lshr_ln27_9 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %add_ln26_9, i32 6, i32 31" [Server/LZW_new.cpp:27]   --->   Operation 322 'partselect' 'lshr_ln27_9' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_20 : Operation 323 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_10)   --->   "%zext_ln27_9 = zext i26 %lshr_ln27_9" [Server/LZW_new.cpp:27]   --->   Operation 323 'zext' 'zext_ln27_9' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_20 : Operation 324 [1/1] (0.00ns)   --->   "%trunc_ln27_16 = trunc i32 %add_ln25_9" [Server/LZW_new.cpp:27]   --->   Operation 324 'trunc' 'trunc_ln27_16' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_20 : Operation 325 [1/1] (0.00ns)   --->   "%trunc_ln27_17 = bitconcatenate i15 @_ssdm_op_BitConcatenate.i15.i5.i10, i5 %trunc_ln27_16, i10 0" [Server/LZW_new.cpp:27]   --->   Operation 325 'bitconcatenate' 'trunc_ln27_17' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_20 : Operation 326 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln27_16 = add i26 %xor_ln25_7, i26 %zext_ln25_29" [Server/LZW_new.cpp:27]   --->   Operation 326 'add' 'add_ln27_16' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_20 : Operation 327 [1/1] (0.86ns) (root node of TernaryAdder)   --->   "%add_ln27_17 = add i26 %add_ln27_16, i26 %trunc_ln26_8" [Server/LZW_new.cpp:27]   --->   Operation 327 'add' 'add_ln27_17' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.86> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_20 : Operation 328 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_10)   --->   "%xor_ln27_9 = xor i32 %zext_ln27_9, i32 %add_ln26_9" [Server/LZW_new.cpp:27]   --->   Operation 328 'xor' 'xor_ln27_9' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 329 [1/1] (0.00ns)   --->   "%tmp_14 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %prefix_code_2, i32 3" [Server/LZW_new.cpp:25]   --->   Operation 329 'bitselect' 'tmp_14' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_20 : Operation 330 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_10)   --->   "%zext_ln25_12 = zext i1 %tmp_14" [Server/LZW_new.cpp:25]   --->   Operation 330 'zext' 'zext_ln25_12' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_20 : Operation 331 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln25_34 = add i15 %xor_ln26_7, i15 %zext_ln26_10" [Server/LZW_new.cpp:25]   --->   Operation 331 'add' 'add_ln25_34' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_20 : Operation 332 [1/1] (0.87ns) (root node of TernaryAdder)   --->   "%add_ln25_35 = add i15 %add_ln25_34, i15 %trunc_ln27_17" [Server/LZW_new.cpp:25]   --->   Operation 332 'add' 'add_ln25_35' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.87> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_20 : Operation 333 [1/1] (0.00ns)   --->   "%trunc_ln25_9 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %add_ln26_9, i32 6, i32 20" [Server/LZW_new.cpp:25]   --->   Operation 333 'partselect' 'trunc_ln25_9' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_20 : Operation 334 [1/1] (0.33ns)   --->   "%xor_ln25_8 = xor i26 %lshr_ln27_9, i26 %add_ln27_17" [Server/LZW_new.cpp:25]   --->   Operation 334 'xor' 'xor_ln25_8' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 335 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln25_10 = add i32 %xor_ln27_9, i32 %zext_ln25_12" [Server/LZW_new.cpp:25]   --->   Operation 335 'add' 'add_ln25_10' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 336 [1/1] (0.42ns)   --->   "%xor_ln26_8 = xor i15 %trunc_ln25_9, i15 %add_ln25_35" [Server/LZW_new.cpp:26]   --->   Operation 336 'xor' 'xor_ln26_8' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.42> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 337 [1/1] (0.00ns)   --->   "%trunc_ln26_26 = trunc i32 %add_ln25_10" [Server/LZW_new.cpp:26]   --->   Operation 337 'trunc' 'trunc_ln26_26' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_20 : Operation 338 [1/1] (0.00ns)   --->   "%trunc_ln27_18 = trunc i32 %add_ln25_10" [Server/LZW_new.cpp:27]   --->   Operation 338 'trunc' 'trunc_ln27_18' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>

State 21 <SV = 19> <Delay = 4.81>
ST_21 : Operation 339 [1/1] (0.00ns)   --->   "%zext_ln25_30 = zext i1 %tmp_14" [Server/LZW_new.cpp:25]   --->   Operation 339 'zext' 'zext_ln25_30' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_21 : Operation 340 [1/1] (0.00ns) (grouped into LUT with out node add_ln26_10)   --->   "%shl_ln26_9 = shl i32 %add_ln25_10, i32 10" [Server/LZW_new.cpp:26]   --->   Operation 340 'shl' 'shl_ln26_9' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_21 : Operation 341 [1/1] (0.00ns)   --->   "%zext_ln26_11 = zext i1 %tmp_14" [Server/LZW_new.cpp:26]   --->   Operation 341 'zext' 'zext_ln26_11' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_21 : Operation 342 [1/1] (0.00ns)   --->   "%trunc_ln26_9 = bitconcatenate i26 @_ssdm_op_BitConcatenate.i26.i16.i10, i16 %trunc_ln26_26, i10 0" [Server/LZW_new.cpp:26]   --->   Operation 342 'bitconcatenate' 'trunc_ln26_9' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_21 : Operation 343 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln26_10 = add i32 %shl_ln26_9, i32 %add_ln25_10" [Server/LZW_new.cpp:26]   --->   Operation 343 'add' 'add_ln26_10' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 344 [1/1] (0.00ns)   --->   "%lshr_ln27_s = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %add_ln26_10, i32 6, i32 31" [Server/LZW_new.cpp:27]   --->   Operation 344 'partselect' 'lshr_ln27_s' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_21 : Operation 345 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_11)   --->   "%zext_ln27_10 = zext i26 %lshr_ln27_s" [Server/LZW_new.cpp:27]   --->   Operation 345 'zext' 'zext_ln27_10' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_21 : Operation 346 [1/1] (0.00ns)   --->   "%trunc_ln27_19 = bitconcatenate i15 @_ssdm_op_BitConcatenate.i15.i5.i10, i5 %trunc_ln27_18, i10 0" [Server/LZW_new.cpp:27]   --->   Operation 346 'bitconcatenate' 'trunc_ln27_19' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_21 : Operation 347 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln27_18 = add i26 %xor_ln25_8, i26 %zext_ln25_30" [Server/LZW_new.cpp:27]   --->   Operation 347 'add' 'add_ln27_18' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_21 : Operation 348 [1/1] (0.86ns) (root node of TernaryAdder)   --->   "%add_ln27_19 = add i26 %add_ln27_18, i26 %trunc_ln26_9" [Server/LZW_new.cpp:27]   --->   Operation 348 'add' 'add_ln27_19' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.86> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_21 : Operation 349 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_11)   --->   "%xor_ln27_10 = xor i32 %zext_ln27_10, i32 %add_ln26_10" [Server/LZW_new.cpp:27]   --->   Operation 349 'xor' 'xor_ln27_10' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 350 [1/1] (0.00ns)   --->   "%tmp_15 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %prefix_code_2, i32 4" [Server/LZW_new.cpp:25]   --->   Operation 350 'bitselect' 'tmp_15' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_21 : Operation 351 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_11)   --->   "%zext_ln25_13 = zext i1 %tmp_15" [Server/LZW_new.cpp:25]   --->   Operation 351 'zext' 'zext_ln25_13' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_21 : Operation 352 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln25_36 = add i15 %xor_ln26_8, i15 %zext_ln26_11" [Server/LZW_new.cpp:25]   --->   Operation 352 'add' 'add_ln25_36' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_21 : Operation 353 [1/1] (0.87ns) (root node of TernaryAdder)   --->   "%add_ln25_37 = add i15 %add_ln25_36, i15 %trunc_ln27_19" [Server/LZW_new.cpp:25]   --->   Operation 353 'add' 'add_ln25_37' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.87> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_21 : Operation 354 [1/1] (0.00ns)   --->   "%trunc_ln25_s = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %add_ln26_10, i32 6, i32 20" [Server/LZW_new.cpp:25]   --->   Operation 354 'partselect' 'trunc_ln25_s' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_21 : Operation 355 [1/1] (0.33ns)   --->   "%xor_ln25_9 = xor i26 %lshr_ln27_s, i26 %add_ln27_19" [Server/LZW_new.cpp:25]   --->   Operation 355 'xor' 'xor_ln25_9' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 356 [1/1] (0.00ns)   --->   "%zext_ln25_31 = zext i1 %tmp_15" [Server/LZW_new.cpp:25]   --->   Operation 356 'zext' 'zext_ln25_31' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_21 : Operation 357 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln25_11 = add i32 %xor_ln27_10, i32 %zext_ln25_13" [Server/LZW_new.cpp:25]   --->   Operation 357 'add' 'add_ln25_11' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 358 [1/1] (0.00ns) (grouped into LUT with out node add_ln26_11)   --->   "%shl_ln26_10 = shl i32 %add_ln25_11, i32 10" [Server/LZW_new.cpp:26]   --->   Operation 358 'shl' 'shl_ln26_10' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_21 : Operation 359 [1/1] (0.42ns)   --->   "%xor_ln26_9 = xor i15 %trunc_ln25_s, i15 %add_ln25_37" [Server/LZW_new.cpp:26]   --->   Operation 359 'xor' 'xor_ln26_9' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.42> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 360 [1/1] (0.00ns)   --->   "%zext_ln26_12 = zext i1 %tmp_15" [Server/LZW_new.cpp:26]   --->   Operation 360 'zext' 'zext_ln26_12' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_21 : Operation 361 [1/1] (0.00ns)   --->   "%trunc_ln26_27 = trunc i32 %add_ln25_11" [Server/LZW_new.cpp:26]   --->   Operation 361 'trunc' 'trunc_ln26_27' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_21 : Operation 362 [1/1] (0.00ns)   --->   "%trunc_ln26_s = bitconcatenate i26 @_ssdm_op_BitConcatenate.i26.i16.i10, i16 %trunc_ln26_27, i10 0" [Server/LZW_new.cpp:26]   --->   Operation 362 'bitconcatenate' 'trunc_ln26_s' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_21 : Operation 363 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln26_11 = add i32 %shl_ln26_10, i32 %add_ln25_11" [Server/LZW_new.cpp:26]   --->   Operation 363 'add' 'add_ln26_11' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 364 [1/1] (0.00ns)   --->   "%lshr_ln27_10 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %add_ln26_11, i32 6, i32 31" [Server/LZW_new.cpp:27]   --->   Operation 364 'partselect' 'lshr_ln27_10' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_21 : Operation 365 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_12)   --->   "%zext_ln27_11 = zext i26 %lshr_ln27_10" [Server/LZW_new.cpp:27]   --->   Operation 365 'zext' 'zext_ln27_11' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_21 : Operation 366 [1/1] (0.00ns)   --->   "%trunc_ln27_20 = trunc i32 %add_ln25_11" [Server/LZW_new.cpp:27]   --->   Operation 366 'trunc' 'trunc_ln27_20' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_21 : Operation 367 [1/1] (0.00ns)   --->   "%trunc_ln27_21 = bitconcatenate i15 @_ssdm_op_BitConcatenate.i15.i5.i10, i5 %trunc_ln27_20, i10 0" [Server/LZW_new.cpp:27]   --->   Operation 367 'bitconcatenate' 'trunc_ln27_21' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_21 : Operation 368 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln27_20 = add i26 %xor_ln25_9, i26 %zext_ln25_31" [Server/LZW_new.cpp:27]   --->   Operation 368 'add' 'add_ln27_20' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_21 : Operation 369 [1/1] (0.86ns) (root node of TernaryAdder)   --->   "%add_ln27_21 = add i26 %add_ln27_20, i26 %trunc_ln26_s" [Server/LZW_new.cpp:27]   --->   Operation 369 'add' 'add_ln27_21' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.86> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_21 : Operation 370 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_12)   --->   "%xor_ln27_11 = xor i32 %zext_ln27_11, i32 %add_ln26_11" [Server/LZW_new.cpp:27]   --->   Operation 370 'xor' 'xor_ln27_11' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 371 [1/1] (0.00ns)   --->   "%tmp_16 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %prefix_code_2, i32 5" [Server/LZW_new.cpp:25]   --->   Operation 371 'bitselect' 'tmp_16' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_21 : Operation 372 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_12)   --->   "%zext_ln25_14 = zext i1 %tmp_16" [Server/LZW_new.cpp:25]   --->   Operation 372 'zext' 'zext_ln25_14' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_21 : Operation 373 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln25_38 = add i15 %xor_ln26_9, i15 %zext_ln26_12" [Server/LZW_new.cpp:25]   --->   Operation 373 'add' 'add_ln25_38' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_21 : Operation 374 [1/1] (0.87ns) (root node of TernaryAdder)   --->   "%add_ln25_39 = add i15 %add_ln25_38, i15 %trunc_ln27_21" [Server/LZW_new.cpp:25]   --->   Operation 374 'add' 'add_ln25_39' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.87> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_21 : Operation 375 [1/1] (0.00ns)   --->   "%trunc_ln25_10 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %add_ln26_11, i32 6, i32 20" [Server/LZW_new.cpp:25]   --->   Operation 375 'partselect' 'trunc_ln25_10' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_21 : Operation 376 [1/1] (0.33ns)   --->   "%xor_ln25_10 = xor i26 %lshr_ln27_10, i26 %add_ln27_21" [Server/LZW_new.cpp:25]   --->   Operation 376 'xor' 'xor_ln25_10' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 377 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln25_12 = add i32 %xor_ln27_11, i32 %zext_ln25_14" [Server/LZW_new.cpp:25]   --->   Operation 377 'add' 'add_ln25_12' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 378 [1/1] (0.42ns)   --->   "%xor_ln26_10 = xor i15 %trunc_ln25_10, i15 %add_ln25_39" [Server/LZW_new.cpp:26]   --->   Operation 378 'xor' 'xor_ln26_10' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.42> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 379 [1/1] (0.00ns)   --->   "%trunc_ln26_28 = trunc i32 %add_ln25_12" [Server/LZW_new.cpp:26]   --->   Operation 379 'trunc' 'trunc_ln26_28' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_21 : Operation 380 [1/1] (0.00ns)   --->   "%trunc_ln27_22 = trunc i32 %add_ln25_12" [Server/LZW_new.cpp:27]   --->   Operation 380 'trunc' 'trunc_ln27_22' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>

State 22 <SV = 20> <Delay = 4.81>
ST_22 : Operation 381 [1/1] (0.00ns)   --->   "%zext_ln25_32 = zext i1 %tmp_16" [Server/LZW_new.cpp:25]   --->   Operation 381 'zext' 'zext_ln25_32' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_22 : Operation 382 [1/1] (0.00ns) (grouped into LUT with out node add_ln26_12)   --->   "%shl_ln26_11 = shl i32 %add_ln25_12, i32 10" [Server/LZW_new.cpp:26]   --->   Operation 382 'shl' 'shl_ln26_11' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_22 : Operation 383 [1/1] (0.00ns)   --->   "%zext_ln26_13 = zext i1 %tmp_16" [Server/LZW_new.cpp:26]   --->   Operation 383 'zext' 'zext_ln26_13' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_22 : Operation 384 [1/1] (0.00ns)   --->   "%trunc_ln26_10 = bitconcatenate i26 @_ssdm_op_BitConcatenate.i26.i16.i10, i16 %trunc_ln26_28, i10 0" [Server/LZW_new.cpp:26]   --->   Operation 384 'bitconcatenate' 'trunc_ln26_10' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_22 : Operation 385 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln26_12 = add i32 %shl_ln26_11, i32 %add_ln25_12" [Server/LZW_new.cpp:26]   --->   Operation 385 'add' 'add_ln26_12' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 386 [1/1] (0.00ns)   --->   "%lshr_ln27_11 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %add_ln26_12, i32 6, i32 31" [Server/LZW_new.cpp:27]   --->   Operation 386 'partselect' 'lshr_ln27_11' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_22 : Operation 387 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_13)   --->   "%zext_ln27_12 = zext i26 %lshr_ln27_11" [Server/LZW_new.cpp:27]   --->   Operation 387 'zext' 'zext_ln27_12' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_22 : Operation 388 [1/1] (0.00ns)   --->   "%trunc_ln27_23 = bitconcatenate i15 @_ssdm_op_BitConcatenate.i15.i5.i10, i5 %trunc_ln27_22, i10 0" [Server/LZW_new.cpp:27]   --->   Operation 388 'bitconcatenate' 'trunc_ln27_23' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_22 : Operation 389 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln27_22 = add i26 %xor_ln25_10, i26 %zext_ln25_32" [Server/LZW_new.cpp:27]   --->   Operation 389 'add' 'add_ln27_22' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_22 : Operation 390 [1/1] (0.86ns) (root node of TernaryAdder)   --->   "%add_ln27_23 = add i26 %add_ln27_22, i26 %trunc_ln26_10" [Server/LZW_new.cpp:27]   --->   Operation 390 'add' 'add_ln27_23' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.86> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_22 : Operation 391 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_13)   --->   "%xor_ln27_12 = xor i32 %zext_ln27_12, i32 %add_ln26_12" [Server/LZW_new.cpp:27]   --->   Operation 391 'xor' 'xor_ln27_12' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 392 [1/1] (0.00ns)   --->   "%tmp_17 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %prefix_code_2, i32 6" [Server/LZW_new.cpp:25]   --->   Operation 392 'bitselect' 'tmp_17' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_22 : Operation 393 [1/1] (0.00ns)   --->   "%zext_ln25_39 = zext i1 %tmp_17" [Server/LZW_new.cpp:25]   --->   Operation 393 'zext' 'zext_ln25_39' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_22 : Operation 394 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_13)   --->   "%zext_ln25_15 = zext i1 %tmp_17" [Server/LZW_new.cpp:25]   --->   Operation 394 'zext' 'zext_ln25_15' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_22 : Operation 395 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln25_40 = add i15 %xor_ln26_10, i15 %zext_ln26_13" [Server/LZW_new.cpp:25]   --->   Operation 395 'add' 'add_ln25_40' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_22 : Operation 396 [1/1] (0.87ns) (root node of TernaryAdder)   --->   "%add_ln25_41 = add i15 %add_ln25_40, i15 %trunc_ln27_23" [Server/LZW_new.cpp:25]   --->   Operation 396 'add' 'add_ln25_41' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.87> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_22 : Operation 397 [1/1] (0.00ns)   --->   "%trunc_ln25_11 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %add_ln26_12, i32 6, i32 20" [Server/LZW_new.cpp:25]   --->   Operation 397 'partselect' 'trunc_ln25_11' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_22 : Operation 398 [1/1] (0.33ns)   --->   "%xor_ln25_11 = xor i26 %lshr_ln27_11, i26 %add_ln27_23" [Server/LZW_new.cpp:25]   --->   Operation 398 'xor' 'xor_ln25_11' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 399 [1/1] (0.00ns)   --->   "%zext_ln25_33 = zext i1 %tmp_17" [Server/LZW_new.cpp:25]   --->   Operation 399 'zext' 'zext_ln25_33' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_22 : Operation 400 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln25_13 = add i32 %xor_ln27_12, i32 %zext_ln25_15" [Server/LZW_new.cpp:25]   --->   Operation 400 'add' 'add_ln25_13' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 401 [1/1] (0.00ns) (grouped into LUT with out node add_ln26_13)   --->   "%shl_ln26_12 = shl i32 %add_ln25_13, i32 10" [Server/LZW_new.cpp:26]   --->   Operation 401 'shl' 'shl_ln26_12' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_22 : Operation 402 [1/1] (0.42ns)   --->   "%xor_ln26_11 = xor i15 %trunc_ln25_11, i15 %add_ln25_41" [Server/LZW_new.cpp:26]   --->   Operation 402 'xor' 'xor_ln26_11' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.42> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 403 [1/1] (0.00ns)   --->   "%trunc_ln26_29 = trunc i32 %add_ln25_13" [Server/LZW_new.cpp:26]   --->   Operation 403 'trunc' 'trunc_ln26_29' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_22 : Operation 404 [1/1] (0.00ns)   --->   "%trunc_ln26_11 = bitconcatenate i26 @_ssdm_op_BitConcatenate.i26.i16.i10, i16 %trunc_ln26_29, i10 0" [Server/LZW_new.cpp:26]   --->   Operation 404 'bitconcatenate' 'trunc_ln26_11' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_22 : Operation 405 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln26_13 = add i32 %shl_ln26_12, i32 %add_ln25_13" [Server/LZW_new.cpp:26]   --->   Operation 405 'add' 'add_ln26_13' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 406 [1/1] (0.00ns)   --->   "%lshr_ln27_12 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %add_ln26_13, i32 6, i32 31" [Server/LZW_new.cpp:27]   --->   Operation 406 'partselect' 'lshr_ln27_12' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_22 : Operation 407 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_14)   --->   "%zext_ln27_13 = zext i26 %lshr_ln27_12" [Server/LZW_new.cpp:27]   --->   Operation 407 'zext' 'zext_ln27_13' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_22 : Operation 408 [1/1] (0.00ns)   --->   "%trunc_ln27_24 = trunc i32 %add_ln25_13" [Server/LZW_new.cpp:27]   --->   Operation 408 'trunc' 'trunc_ln27_24' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_22 : Operation 409 [1/1] (0.00ns)   --->   "%trunc_ln27_25 = bitconcatenate i15 @_ssdm_op_BitConcatenate.i15.i5.i10, i5 %trunc_ln27_24, i10 0" [Server/LZW_new.cpp:27]   --->   Operation 409 'bitconcatenate' 'trunc_ln27_25' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_22 : Operation 410 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln27_24 = add i26 %xor_ln25_11, i26 %zext_ln25_33" [Server/LZW_new.cpp:27]   --->   Operation 410 'add' 'add_ln27_24' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_22 : Operation 411 [1/1] (0.86ns) (root node of TernaryAdder)   --->   "%add_ln27_25 = add i26 %add_ln27_24, i26 %trunc_ln26_11" [Server/LZW_new.cpp:27]   --->   Operation 411 'add' 'add_ln27_25' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.86> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_22 : Operation 412 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_14)   --->   "%xor_ln27_13 = xor i32 %zext_ln27_13, i32 %add_ln26_13" [Server/LZW_new.cpp:27]   --->   Operation 412 'xor' 'xor_ln27_13' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 413 [1/1] (0.00ns)   --->   "%tmp_18 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %prefix_code_2, i32 7" [Server/LZW_new.cpp:25]   --->   Operation 413 'bitselect' 'tmp_18' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_22 : Operation 414 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_14)   --->   "%zext_ln25_16 = zext i1 %tmp_18" [Server/LZW_new.cpp:25]   --->   Operation 414 'zext' 'zext_ln25_16' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_22 : Operation 415 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln25_42 = add i15 %xor_ln26_11, i15 %zext_ln25_39" [Server/LZW_new.cpp:25]   --->   Operation 415 'add' 'add_ln25_42' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_22 : Operation 416 [1/1] (0.87ns) (root node of TernaryAdder)   --->   "%add_ln25_43 = add i15 %add_ln25_42, i15 %trunc_ln27_25" [Server/LZW_new.cpp:25]   --->   Operation 416 'add' 'add_ln25_43' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.87> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_22 : Operation 417 [1/1] (0.00ns)   --->   "%trunc_ln25_12 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %add_ln26_13, i32 6, i32 20" [Server/LZW_new.cpp:25]   --->   Operation 417 'partselect' 'trunc_ln25_12' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_22 : Operation 418 [1/1] (0.33ns)   --->   "%xor_ln25_12 = xor i26 %lshr_ln27_12, i26 %add_ln27_25" [Server/LZW_new.cpp:25]   --->   Operation 418 'xor' 'xor_ln25_12' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 419 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln25_14 = add i32 %xor_ln27_13, i32 %zext_ln25_16" [Server/LZW_new.cpp:25]   --->   Operation 419 'add' 'add_ln25_14' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 420 [1/1] (0.42ns)   --->   "%xor_ln26_12 = xor i15 %trunc_ln25_12, i15 %add_ln25_43" [Server/LZW_new.cpp:26]   --->   Operation 420 'xor' 'xor_ln26_12' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.42> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 421 [1/1] (0.00ns)   --->   "%trunc_ln26_30 = trunc i32 %add_ln25_14" [Server/LZW_new.cpp:26]   --->   Operation 421 'trunc' 'trunc_ln26_30' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_22 : Operation 422 [1/1] (0.00ns)   --->   "%trunc_ln27_26 = trunc i32 %add_ln25_14" [Server/LZW_new.cpp:27]   --->   Operation 422 'trunc' 'trunc_ln27_26' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>

State 23 <SV = 21> <Delay = 4.81>
ST_23 : Operation 423 [1/1] (0.00ns)   --->   "%zext_ln25_34 = zext i1 %tmp_18" [Server/LZW_new.cpp:25]   --->   Operation 423 'zext' 'zext_ln25_34' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_23 : Operation 424 [1/1] (0.00ns) (grouped into LUT with out node add_ln26_14)   --->   "%shl_ln26_13 = shl i32 %add_ln25_14, i32 10" [Server/LZW_new.cpp:26]   --->   Operation 424 'shl' 'shl_ln26_13' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_23 : Operation 425 [1/1] (0.00ns)   --->   "%zext_ln26_14 = zext i1 %tmp_18" [Server/LZW_new.cpp:26]   --->   Operation 425 'zext' 'zext_ln26_14' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_23 : Operation 426 [1/1] (0.00ns)   --->   "%trunc_ln26_13 = bitconcatenate i26 @_ssdm_op_BitConcatenate.i26.i16.i10, i16 %trunc_ln26_30, i10 0" [Server/LZW_new.cpp:26]   --->   Operation 426 'bitconcatenate' 'trunc_ln26_13' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_23 : Operation 427 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln26_14 = add i32 %shl_ln26_13, i32 %add_ln25_14" [Server/LZW_new.cpp:26]   --->   Operation 427 'add' 'add_ln26_14' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 428 [1/1] (0.00ns)   --->   "%lshr_ln27_13 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %add_ln26_14, i32 6, i32 31" [Server/LZW_new.cpp:27]   --->   Operation 428 'partselect' 'lshr_ln27_13' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_23 : Operation 429 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_15)   --->   "%zext_ln27_14 = zext i26 %lshr_ln27_13" [Server/LZW_new.cpp:27]   --->   Operation 429 'zext' 'zext_ln27_14' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_23 : Operation 430 [1/1] (0.00ns)   --->   "%trunc_ln27_27 = bitconcatenate i15 @_ssdm_op_BitConcatenate.i15.i5.i10, i5 %trunc_ln27_26, i10 0" [Server/LZW_new.cpp:27]   --->   Operation 430 'bitconcatenate' 'trunc_ln27_27' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_23 : Operation 431 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln27_26 = add i26 %xor_ln25_12, i26 %zext_ln25_34" [Server/LZW_new.cpp:27]   --->   Operation 431 'add' 'add_ln27_26' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_23 : Operation 432 [1/1] (0.86ns) (root node of TernaryAdder)   --->   "%add_ln27_27 = add i26 %add_ln27_26, i26 %trunc_ln26_13" [Server/LZW_new.cpp:27]   --->   Operation 432 'add' 'add_ln27_27' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.86> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_23 : Operation 433 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_15)   --->   "%xor_ln27_14 = xor i32 %zext_ln27_14, i32 %add_ln26_14" [Server/LZW_new.cpp:27]   --->   Operation 433 'xor' 'xor_ln27_14' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 434 [1/1] (0.00ns)   --->   "%tmp_19 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %prefix_code_2, i32 8" [Server/LZW_new.cpp:25]   --->   Operation 434 'bitselect' 'tmp_19' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_23 : Operation 435 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_15)   --->   "%zext_ln25_17 = zext i1 %tmp_19" [Server/LZW_new.cpp:25]   --->   Operation 435 'zext' 'zext_ln25_17' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_23 : Operation 436 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln25_44 = add i15 %xor_ln26_12, i15 %zext_ln26_14" [Server/LZW_new.cpp:25]   --->   Operation 436 'add' 'add_ln25_44' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_23 : Operation 437 [1/1] (0.87ns) (root node of TernaryAdder)   --->   "%add_ln25_45 = add i15 %add_ln25_44, i15 %trunc_ln27_27" [Server/LZW_new.cpp:25]   --->   Operation 437 'add' 'add_ln25_45' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.87> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_23 : Operation 438 [1/1] (0.00ns)   --->   "%trunc_ln25_13 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %add_ln26_14, i32 6, i32 20" [Server/LZW_new.cpp:25]   --->   Operation 438 'partselect' 'trunc_ln25_13' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_23 : Operation 439 [1/1] (0.33ns)   --->   "%xor_ln25_13 = xor i26 %lshr_ln27_13, i26 %add_ln27_27" [Server/LZW_new.cpp:25]   --->   Operation 439 'xor' 'xor_ln25_13' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 440 [1/1] (0.00ns)   --->   "%zext_ln25_35 = zext i1 %tmp_19" [Server/LZW_new.cpp:25]   --->   Operation 440 'zext' 'zext_ln25_35' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_23 : Operation 441 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln25_15 = add i32 %xor_ln27_14, i32 %zext_ln25_17" [Server/LZW_new.cpp:25]   --->   Operation 441 'add' 'add_ln25_15' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 442 [1/1] (0.00ns) (grouped into LUT with out node add_ln26_15)   --->   "%shl_ln26_14 = shl i32 %add_ln25_15, i32 10" [Server/LZW_new.cpp:26]   --->   Operation 442 'shl' 'shl_ln26_14' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_23 : Operation 443 [1/1] (0.42ns)   --->   "%xor_ln26_13 = xor i15 %trunc_ln25_13, i15 %add_ln25_45" [Server/LZW_new.cpp:26]   --->   Operation 443 'xor' 'xor_ln26_13' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.42> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 444 [1/1] (0.00ns)   --->   "%zext_ln26_15 = zext i1 %tmp_19" [Server/LZW_new.cpp:26]   --->   Operation 444 'zext' 'zext_ln26_15' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_23 : Operation 445 [1/1] (0.00ns)   --->   "%trunc_ln26_31 = trunc i32 %add_ln25_15" [Server/LZW_new.cpp:26]   --->   Operation 445 'trunc' 'trunc_ln26_31' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_23 : Operation 446 [1/1] (0.00ns)   --->   "%trunc_ln26_15 = bitconcatenate i26 @_ssdm_op_BitConcatenate.i26.i16.i10, i16 %trunc_ln26_31, i10 0" [Server/LZW_new.cpp:26]   --->   Operation 446 'bitconcatenate' 'trunc_ln26_15' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_23 : Operation 447 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln26_15 = add i32 %shl_ln26_14, i32 %add_ln25_15" [Server/LZW_new.cpp:26]   --->   Operation 447 'add' 'add_ln26_15' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 448 [1/1] (0.00ns)   --->   "%lshr_ln27_14 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %add_ln26_15, i32 6, i32 31" [Server/LZW_new.cpp:27]   --->   Operation 448 'partselect' 'lshr_ln27_14' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_23 : Operation 449 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_16)   --->   "%zext_ln27_15 = zext i26 %lshr_ln27_14" [Server/LZW_new.cpp:27]   --->   Operation 449 'zext' 'zext_ln27_15' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_23 : Operation 450 [1/1] (0.00ns)   --->   "%trunc_ln27_28 = trunc i32 %add_ln25_15" [Server/LZW_new.cpp:27]   --->   Operation 450 'trunc' 'trunc_ln27_28' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_23 : Operation 451 [1/1] (0.00ns)   --->   "%trunc_ln27_29 = bitconcatenate i15 @_ssdm_op_BitConcatenate.i15.i5.i10, i5 %trunc_ln27_28, i10 0" [Server/LZW_new.cpp:27]   --->   Operation 451 'bitconcatenate' 'trunc_ln27_29' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_23 : Operation 452 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln27_28 = add i26 %xor_ln25_13, i26 %zext_ln25_35" [Server/LZW_new.cpp:27]   --->   Operation 452 'add' 'add_ln27_28' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_23 : Operation 453 [1/1] (0.86ns) (root node of TernaryAdder)   --->   "%add_ln27_29 = add i26 %add_ln27_28, i26 %trunc_ln26_15" [Server/LZW_new.cpp:27]   --->   Operation 453 'add' 'add_ln27_29' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.86> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_23 : Operation 454 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_16)   --->   "%xor_ln27_15 = xor i32 %zext_ln27_15, i32 %add_ln26_15" [Server/LZW_new.cpp:27]   --->   Operation 454 'xor' 'xor_ln27_15' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 455 [1/1] (0.00ns)   --->   "%tmp_20 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %prefix_code_2, i32 9" [Server/LZW_new.cpp:25]   --->   Operation 455 'bitselect' 'tmp_20' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_23 : Operation 456 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_16)   --->   "%zext_ln25_18 = zext i1 %tmp_20" [Server/LZW_new.cpp:25]   --->   Operation 456 'zext' 'zext_ln25_18' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_23 : Operation 457 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln25_46 = add i15 %xor_ln26_13, i15 %zext_ln26_15" [Server/LZW_new.cpp:25]   --->   Operation 457 'add' 'add_ln25_46' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_23 : Operation 458 [1/1] (0.87ns) (root node of TernaryAdder)   --->   "%add_ln25_47 = add i15 %add_ln25_46, i15 %trunc_ln27_29" [Server/LZW_new.cpp:25]   --->   Operation 458 'add' 'add_ln25_47' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.87> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_23 : Operation 459 [1/1] (0.00ns)   --->   "%trunc_ln25_14 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %add_ln26_15, i32 6, i32 20" [Server/LZW_new.cpp:25]   --->   Operation 459 'partselect' 'trunc_ln25_14' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_23 : Operation 460 [1/1] (0.33ns)   --->   "%xor_ln25_14 = xor i26 %lshr_ln27_14, i26 %add_ln27_29" [Server/LZW_new.cpp:25]   --->   Operation 460 'xor' 'xor_ln25_14' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 461 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln25_16 = add i32 %xor_ln27_15, i32 %zext_ln25_18" [Server/LZW_new.cpp:25]   --->   Operation 461 'add' 'add_ln25_16' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 462 [1/1] (0.42ns)   --->   "%xor_ln26_14 = xor i15 %trunc_ln25_14, i15 %add_ln25_47" [Server/LZW_new.cpp:26]   --->   Operation 462 'xor' 'xor_ln26_14' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.42> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 463 [1/1] (0.00ns)   --->   "%trunc_ln26_32 = trunc i32 %add_ln25_16" [Server/LZW_new.cpp:26]   --->   Operation 463 'trunc' 'trunc_ln26_32' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_23 : Operation 464 [1/1] (0.00ns)   --->   "%trunc_ln27_30 = trunc i32 %add_ln25_16" [Server/LZW_new.cpp:27]   --->   Operation 464 'trunc' 'trunc_ln27_30' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>

State 24 <SV = 22> <Delay = 4.81>
ST_24 : Operation 465 [1/1] (0.00ns)   --->   "%zext_ln25_36 = zext i1 %tmp_20" [Server/LZW_new.cpp:25]   --->   Operation 465 'zext' 'zext_ln25_36' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_24 : Operation 466 [1/1] (0.00ns) (grouped into LUT with out node add_ln26_16)   --->   "%shl_ln26_15 = shl i32 %add_ln25_16, i32 10" [Server/LZW_new.cpp:26]   --->   Operation 466 'shl' 'shl_ln26_15' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_24 : Operation 467 [1/1] (0.00ns)   --->   "%zext_ln26_16 = zext i1 %tmp_20" [Server/LZW_new.cpp:26]   --->   Operation 467 'zext' 'zext_ln26_16' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_24 : Operation 468 [1/1] (0.00ns)   --->   "%trunc_ln26_17 = bitconcatenate i26 @_ssdm_op_BitConcatenate.i26.i16.i10, i16 %trunc_ln26_32, i10 0" [Server/LZW_new.cpp:26]   --->   Operation 468 'bitconcatenate' 'trunc_ln26_17' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_24 : Operation 469 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln26_16 = add i32 %shl_ln26_15, i32 %add_ln25_16" [Server/LZW_new.cpp:26]   --->   Operation 469 'add' 'add_ln26_16' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 470 [1/1] (0.00ns)   --->   "%lshr_ln27_15 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %add_ln26_16, i32 6, i32 31" [Server/LZW_new.cpp:27]   --->   Operation 470 'partselect' 'lshr_ln27_15' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_24 : Operation 471 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_17)   --->   "%zext_ln27_16 = zext i26 %lshr_ln27_15" [Server/LZW_new.cpp:27]   --->   Operation 471 'zext' 'zext_ln27_16' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_24 : Operation 472 [1/1] (0.00ns)   --->   "%trunc_ln27_31 = bitconcatenate i15 @_ssdm_op_BitConcatenate.i15.i5.i10, i5 %trunc_ln27_30, i10 0" [Server/LZW_new.cpp:27]   --->   Operation 472 'bitconcatenate' 'trunc_ln27_31' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_24 : Operation 473 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln27_30 = add i26 %xor_ln25_14, i26 %zext_ln25_36" [Server/LZW_new.cpp:27]   --->   Operation 473 'add' 'add_ln27_30' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_24 : Operation 474 [1/1] (0.86ns) (root node of TernaryAdder)   --->   "%add_ln27_31 = add i26 %add_ln27_30, i26 %trunc_ln26_17" [Server/LZW_new.cpp:27]   --->   Operation 474 'add' 'add_ln27_31' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.86> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_24 : Operation 475 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_17)   --->   "%xor_ln27_16 = xor i32 %zext_ln27_16, i32 %add_ln26_16" [Server/LZW_new.cpp:27]   --->   Operation 475 'xor' 'xor_ln27_16' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 476 [1/1] (0.00ns)   --->   "%tmp_21 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %prefix_code_2, i32 10" [Server/LZW_new.cpp:25]   --->   Operation 476 'bitselect' 'tmp_21' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_24 : Operation 477 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_17)   --->   "%zext_ln25_19 = zext i1 %tmp_21" [Server/LZW_new.cpp:25]   --->   Operation 477 'zext' 'zext_ln25_19' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_24 : Operation 478 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln25_48 = add i15 %xor_ln26_14, i15 %zext_ln26_16" [Server/LZW_new.cpp:25]   --->   Operation 478 'add' 'add_ln25_48' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_24 : Operation 479 [1/1] (0.87ns) (root node of TernaryAdder)   --->   "%add_ln25_49 = add i15 %add_ln25_48, i15 %trunc_ln27_31" [Server/LZW_new.cpp:25]   --->   Operation 479 'add' 'add_ln25_49' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.87> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_24 : Operation 480 [1/1] (0.00ns)   --->   "%trunc_ln25_15 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %add_ln26_16, i32 6, i32 20" [Server/LZW_new.cpp:25]   --->   Operation 480 'partselect' 'trunc_ln25_15' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_24 : Operation 481 [1/1] (0.33ns)   --->   "%xor_ln25_15 = xor i26 %lshr_ln27_15, i26 %add_ln27_31" [Server/LZW_new.cpp:25]   --->   Operation 481 'xor' 'xor_ln25_15' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 482 [1/1] (0.00ns)   --->   "%zext_ln25_37 = zext i1 %tmp_21" [Server/LZW_new.cpp:25]   --->   Operation 482 'zext' 'zext_ln25_37' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_24 : Operation 483 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln25_17 = add i32 %xor_ln27_16, i32 %zext_ln25_19" [Server/LZW_new.cpp:25]   --->   Operation 483 'add' 'add_ln25_17' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 484 [1/1] (0.00ns) (grouped into LUT with out node add_ln26_17)   --->   "%shl_ln26_16 = shl i32 %add_ln25_17, i32 10" [Server/LZW_new.cpp:26]   --->   Operation 484 'shl' 'shl_ln26_16' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_24 : Operation 485 [1/1] (0.42ns)   --->   "%xor_ln26_15 = xor i15 %trunc_ln25_15, i15 %add_ln25_49" [Server/LZW_new.cpp:26]   --->   Operation 485 'xor' 'xor_ln26_15' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.42> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 486 [1/1] (0.00ns)   --->   "%zext_ln26_17 = zext i1 %tmp_21" [Server/LZW_new.cpp:26]   --->   Operation 486 'zext' 'zext_ln26_17' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_24 : Operation 487 [1/1] (0.00ns)   --->   "%trunc_ln26_33 = trunc i32 %add_ln25_17" [Server/LZW_new.cpp:26]   --->   Operation 487 'trunc' 'trunc_ln26_33' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_24 : Operation 488 [1/1] (0.00ns)   --->   "%trunc_ln26_19 = bitconcatenate i26 @_ssdm_op_BitConcatenate.i26.i16.i10, i16 %trunc_ln26_33, i10 0" [Server/LZW_new.cpp:26]   --->   Operation 488 'bitconcatenate' 'trunc_ln26_19' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_24 : Operation 489 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln26_17 = add i32 %shl_ln26_16, i32 %add_ln25_17" [Server/LZW_new.cpp:26]   --->   Operation 489 'add' 'add_ln26_17' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 490 [1/1] (0.00ns)   --->   "%lshr_ln27_16 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %add_ln26_17, i32 6, i32 31" [Server/LZW_new.cpp:27]   --->   Operation 490 'partselect' 'lshr_ln27_16' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_24 : Operation 491 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_18)   --->   "%zext_ln27_17 = zext i26 %lshr_ln27_16" [Server/LZW_new.cpp:27]   --->   Operation 491 'zext' 'zext_ln27_17' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_24 : Operation 492 [1/1] (0.00ns)   --->   "%trunc_ln27_32 = trunc i32 %add_ln25_17" [Server/LZW_new.cpp:27]   --->   Operation 492 'trunc' 'trunc_ln27_32' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_24 : Operation 493 [1/1] (0.00ns)   --->   "%trunc_ln27_33 = bitconcatenate i15 @_ssdm_op_BitConcatenate.i15.i5.i10, i5 %trunc_ln27_32, i10 0" [Server/LZW_new.cpp:27]   --->   Operation 493 'bitconcatenate' 'trunc_ln27_33' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_24 : Operation 494 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln27_32 = add i26 %xor_ln25_15, i26 %zext_ln25_37" [Server/LZW_new.cpp:27]   --->   Operation 494 'add' 'add_ln27_32' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_24 : Operation 495 [1/1] (0.86ns) (root node of TernaryAdder)   --->   "%add_ln27_33 = add i26 %add_ln27_32, i26 %trunc_ln26_19" [Server/LZW_new.cpp:27]   --->   Operation 495 'add' 'add_ln27_33' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.86> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_24 : Operation 496 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_18)   --->   "%xor_ln27_17 = xor i32 %zext_ln27_17, i32 %add_ln26_17" [Server/LZW_new.cpp:27]   --->   Operation 496 'xor' 'xor_ln27_17' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 497 [1/1] (0.00ns)   --->   "%tmp_22 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %prefix_code_2, i32 11" [Server/LZW_new.cpp:25]   --->   Operation 497 'bitselect' 'tmp_22' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_24 : Operation 498 [1/1] (0.00ns) (grouped into LUT with out node add_ln25_18)   --->   "%zext_ln25_20 = zext i1 %tmp_22" [Server/LZW_new.cpp:25]   --->   Operation 498 'zext' 'zext_ln25_20' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_24 : Operation 499 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln25_50 = add i15 %xor_ln26_15, i15 %zext_ln26_17" [Server/LZW_new.cpp:25]   --->   Operation 499 'add' 'add_ln25_50' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_24 : Operation 500 [1/1] (0.87ns) (root node of TernaryAdder)   --->   "%add_ln25_51 = add i15 %add_ln25_50, i15 %trunc_ln27_33" [Server/LZW_new.cpp:25]   --->   Operation 500 'add' 'add_ln25_51' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.87> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_24 : Operation 501 [1/1] (0.00ns)   --->   "%trunc_ln25_16 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %add_ln26_17, i32 6, i32 20" [Server/LZW_new.cpp:25]   --->   Operation 501 'partselect' 'trunc_ln25_16' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_24 : Operation 502 [1/1] (0.33ns)   --->   "%xor_ln25_16 = xor i26 %lshr_ln27_16, i26 %add_ln27_33" [Server/LZW_new.cpp:25]   --->   Operation 502 'xor' 'xor_ln25_16' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 503 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln25_18 = add i32 %xor_ln27_17, i32 %zext_ln25_20" [Server/LZW_new.cpp:25]   --->   Operation 503 'add' 'add_ln25_18' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 504 [1/1] (0.42ns)   --->   "%xor_ln26_16 = xor i15 %trunc_ln25_16, i15 %add_ln25_51" [Server/LZW_new.cpp:26]   --->   Operation 504 'xor' 'xor_ln26_16' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.42> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 505 [1/1] (0.00ns)   --->   "%trunc_ln26_34 = trunc i32 %add_ln25_18" [Server/LZW_new.cpp:26]   --->   Operation 505 'trunc' 'trunc_ln26_34' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_24 : Operation 506 [1/1] (0.00ns)   --->   "%trunc_ln27_34 = trunc i32 %add_ln25_18" [Server/LZW_new.cpp:27]   --->   Operation 506 'trunc' 'trunc_ln27_34' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>

State 25 <SV = 23> <Delay = 4.44>
ST_25 : Operation 507 [1/1] (0.00ns)   --->   "%zext_ln25_38 = zext i1 %tmp_22" [Server/LZW_new.cpp:25]   --->   Operation 507 'zext' 'zext_ln25_38' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_25 : Operation 508 [1/1] (0.00ns) (grouped into LUT with out node add_ln26_18)   --->   "%shl_ln26_17 = shl i32 %add_ln25_18, i32 10" [Server/LZW_new.cpp:26]   --->   Operation 508 'shl' 'shl_ln26_17' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_25 : Operation 509 [1/1] (0.00ns)   --->   "%zext_ln26_18 = zext i1 %tmp_22" [Server/LZW_new.cpp:26]   --->   Operation 509 'zext' 'zext_ln26_18' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_25 : Operation 510 [1/1] (0.00ns)   --->   "%trunc_ln26_21 = bitconcatenate i26 @_ssdm_op_BitConcatenate.i26.i16.i10, i16 %trunc_ln26_34, i10 0" [Server/LZW_new.cpp:26]   --->   Operation 510 'bitconcatenate' 'trunc_ln26_21' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_25 : Operation 511 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln26_18 = add i32 %shl_ln26_17, i32 %add_ln25_18" [Server/LZW_new.cpp:26]   --->   Operation 511 'add' 'add_ln26_18' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 512 [1/1] (0.00ns)   --->   "%trunc_ln27_35 = bitconcatenate i15 @_ssdm_op_BitConcatenate.i15.i5.i10, i5 %trunc_ln27_34, i10 0" [Server/LZW_new.cpp:27]   --->   Operation 512 'bitconcatenate' 'trunc_ln27_35' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_25 : Operation 513 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln27_34 = add i26 %xor_ln25_16, i26 %zext_ln25_38" [Server/LZW_new.cpp:27]   --->   Operation 513 'add' 'add_ln27_34' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_25 : Operation 514 [1/1] (0.86ns) (root node of TernaryAdder)   --->   "%add_ln27_35 = add i26 %add_ln27_34, i26 %trunc_ln26_21" [Server/LZW_new.cpp:27]   --->   Operation 514 'add' 'add_ln27_35' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.86> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_25 : Operation 515 [1/1] (0.00ns)   --->   "%trunc_ln27_1 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %add_ln26_18, i32 6, i32 31" [Server/LZW_new.cpp:27]   --->   Operation 515 'partselect' 'trunc_ln27_1' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_25 : Operation 516 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln27_36 = add i15 %xor_ln26_16, i15 %zext_ln26_18" [Server/LZW_new.cpp:27]   --->   Operation 516 'add' 'add_ln27_36' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_25 : Operation 517 [1/1] (0.87ns) (root node of TernaryAdder)   --->   "%add_ln27_37 = add i15 %add_ln27_36, i15 %trunc_ln27_35" [Server/LZW_new.cpp:27]   --->   Operation 517 'add' 'add_ln27_37' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.87> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.43> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_25 : Operation 518 [1/1] (0.00ns) (grouped into LUT with out node add_ln20)   --->   "%trunc_ln4 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %add_ln26_18, i32 6, i32 20" [Server/LZW_new.cpp:27]   --->   Operation 518 'partselect' 'trunc_ln4' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_25 : Operation 519 [1/1] (0.33ns)   --->   "%xor_ln27_18 = xor i26 %trunc_ln27_1, i26 %add_ln27_35" [Server/LZW_new.cpp:27]   --->   Operation 519 'xor' 'xor_ln27_18' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 520 [1/1] (0.00ns) (grouped into LUT with out node hashed)   --->   "%shl_ln29 = shl i26 %xor_ln27_18, i26 3" [Server/LZW_new.cpp:29]   --->   Operation 520 'shl' 'shl_ln29' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_25 : Operation 521 [1/1] (0.00ns) (grouped into LUT with out node add_ln20)   --->   "%xor_ln29 = xor i15 %trunc_ln4, i15 %add_ln27_37" [Server/LZW_new.cpp:29]   --->   Operation 521 'xor' 'xor_ln29' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 522 [1/1] (0.00ns) (grouped into LUT with out node add_ln20)   --->   "%trunc_ln29 = trunc i26 %xor_ln27_18" [Server/LZW_new.cpp:29]   --->   Operation 522 'trunc' 'trunc_ln29' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_25 : Operation 523 [1/1] (0.00ns) (grouped into LUT with out node add_ln20)   --->   "%trunc_ln5 = bitconcatenate i15 @_ssdm_op_BitConcatenate.i15.i12.i3, i12 %trunc_ln29, i3 0" [Server/LZW_new.cpp:29]   --->   Operation 523 'bitconcatenate' 'trunc_ln5' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_25 : Operation 524 [1/1] (1.13ns) (out node of the LUT)   --->   "%hashed = add i26 %shl_ln29, i26 %xor_ln27_18" [Server/LZW_new.cpp:29]   --->   Operation 524 'add' 'hashed' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.13> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 525 [1/1] (1.00ns) (out node of the LUT)   --->   "%add_ln20 = add i15 %trunc_ln5, i15 %xor_ln29" [Server/LZW_new.cpp:20]   --->   Operation 525 'add' 'add_ln20' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.00> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 526 [1/1] (0.00ns)   --->   "%trunc_ln6 = partselect i15 @_ssdm_op_PartSelect.i15.i26.i32.i32, i26 %hashed, i32 11, i32 25" [Server/LZW_new.cpp:30]   --->   Operation 526 'partselect' 'trunc_ln6' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_25 : Operation 527 [1/1] (0.42ns)   --->   "%hashed_2 = xor i15 %trunc_ln6, i15 %add_ln20" [Server/LZW_new.cpp:30]   --->   Operation 527 'xor' 'hashed_2' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.42> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 528 [1/1] (0.00ns)   --->   "%zext_ln41 = zext i15 %hashed_2" [Server/LZW_new.cpp:41]   --->   Operation 528 'zext' 'zext_ln41' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_25 : Operation 529 [1/1] (0.00ns)   --->   "%hash_table_0_addr_2 = getelementptr i33 %hash_table_0, i64 0, i64 %zext_ln41" [Server/LZW_new.cpp:41]   --->   Operation 529 'getelementptr' 'hash_table_0_addr_2' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_25 : Operation 530 [2/2] (1.35ns)   --->   "%lookup_0 = load i15 %hash_table_0_addr_2" [Server/LZW_new.cpp:41]   --->   Operation 530 'load' 'lookup_0' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 33> <Depth = 32768> <RAM>
ST_25 : Operation 531 [1/1] (0.00ns)   --->   "%hash_table_1_addr_2 = getelementptr i33 %hash_table_1, i64 0, i64 %zext_ln41" [Server/LZW_new.cpp:42]   --->   Operation 531 'getelementptr' 'hash_table_1_addr_2' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_25 : Operation 532 [2/2] (1.35ns)   --->   "%lookup_1 = load i15 %hash_table_1_addr_2" [Server/LZW_new.cpp:42]   --->   Operation 532 'load' 'lookup_1' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 33> <Depth = 32768> <RAM>

State 26 <SV = 24> <Delay = 2.61>
ST_26 : Operation 533 [1/1] (0.00ns)   --->   "%trunc_ln262 = trunc i16 %prefix_code_2" [Server/LZW_new.cpp:262]   --->   Operation 533 'trunc' 'trunc_ln262' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_26 : Operation 534 [1/1] (0.00ns)   --->   "%key_assign = bitconcatenate i20 @_ssdm_op_BitConcatenate.i20.i12.i8, i12 %trunc_ln262, i8 %next_char" [Server/LZW_new.cpp:181]   --->   Operation 534 'bitconcatenate' 'key_assign' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_26 : Operation 535 [1/2] (1.35ns)   --->   "%lookup_0 = load i15 %hash_table_0_addr_2" [Server/LZW_new.cpp:41]   --->   Operation 535 'load' 'lookup_0' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 33> <Depth = 32768> <RAM>
ST_26 : Operation 536 [1/2] (1.35ns)   --->   "%lookup_1 = load i15 %hash_table_1_addr_2" [Server/LZW_new.cpp:42]   --->   Operation 536 'load' 'lookup_1' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 33> <Depth = 32768> <RAM>
ST_26 : Operation 537 [1/1] (0.00ns)   --->   "%stored_key_0 = trunc i33 %lookup_0" [Server/LZW_new.cpp:45]   --->   Operation 537 'trunc' 'stored_key_0' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_26 : Operation 538 [1/1] (0.00ns)   --->   "%trunc_ln7 = partselect i12 @_ssdm_op_PartSelect.i12.i33.i32.i32, i33 %lookup_0, i32 20, i32 31" [Server/LZW_new.cpp:56]   --->   Operation 538 'partselect' 'trunc_ln7' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_26 : Operation 539 [1/1] (0.00ns)   --->   "%valid_0 = bitselect i1 @_ssdm_op_BitSelect.i1.i33.i32, i33 %lookup_0, i32 32" [Server/LZW_new.cpp:47]   --->   Operation 539 'bitselect' 'valid_0' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_26 : Operation 540 [1/1] (0.00ns)   --->   "%stored_key_1 = trunc i33 %lookup_1" [Server/LZW_new.cpp:49]   --->   Operation 540 'trunc' 'stored_key_1' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_26 : Operation 541 [1/1] (0.00ns)   --->   "%trunc_ln8 = partselect i12 @_ssdm_op_PartSelect.i12.i33.i32.i32, i33 %lookup_1, i32 20, i32 31" [Server/LZW_new.cpp:63]   --->   Operation 541 'partselect' 'trunc_ln8' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_26 : Operation 542 [1/1] (0.00ns)   --->   "%valid_1 = bitselect i1 @_ssdm_op_BitSelect.i1.i33.i32, i33 %lookup_1, i32 32" [Server/LZW_new.cpp:51]   --->   Operation 542 'bitselect' 'valid_1' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_26 : Operation 543 [1/1] (0.92ns)   --->   "%icmp_ln53 = icmp_eq  i20 %key_assign, i20 %stored_key_0" [Server/LZW_new.cpp:53]   --->   Operation 543 'icmp' 'icmp_ln53' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 544 [1/1] (0.33ns)   --->   "%and_ln53 = and i1 %valid_0, i1 %icmp_ln53" [Server/LZW_new.cpp:53]   --->   Operation 544 'and' 'and_ln53' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 545 [1/1] (0.92ns)   --->   "%icmp_ln60 = icmp_eq  i20 %key_assign, i20 %stored_key_1" [Server/LZW_new.cpp:60]   --->   Operation 545 'icmp' 'icmp_ln60' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53)> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 546 [1/1] (0.33ns)   --->   "%and_ln60 = and i1 %valid_1, i1 %icmp_ln60" [Server/LZW_new.cpp:60]   --->   Operation 546 'and' 'and_ln60' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 27 <SV = 25> <Delay = 1.35>
ST_27 : Operation 547 [3/3] (1.35ns)   --->   "%call_ret = call i33 @assoc_lookup, i64 %my_assoc_mem_upper_key_mem, i64 %my_assoc_mem_middle_key_mem, i64 %my_assoc_mem_lower_key_mem, i12 %my_assoc_mem_value, i20 %key_assign" [Server/LZW_new.cpp:187]   --->   Operation 547 'call' 'call_ret' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60)> <Delay = 1.35> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 28 <SV = 26> <Delay = 3.51>
ST_28 : Operation 548 [2/3] (3.51ns)   --->   "%call_ret = call i33 @assoc_lookup, i64 %my_assoc_mem_upper_key_mem, i64 %my_assoc_mem_middle_key_mem, i64 %my_assoc_mem_lower_key_mem, i12 %my_assoc_mem_value, i20 %key_assign" [Server/LZW_new.cpp:187]   --->   Operation 548 'call' 'call_ret' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60)> <Delay = 3.51> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 29 <SV = 27> <Delay = 2.63>
ST_29 : Operation 549 [1/1] (0.00ns)   --->   "%empty_50 = phi i32 %empty_52, void %_Z6lookupPA32768_mP9assoc_memjPbPj.exit.thread, i32 0, void %.lr.ph24.preheader" [Server/LZW_new.cpp:126]   --->   Operation 549 'phi' 'empty_50' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 550 [1/1] (0.00ns)   --->   "%next_code_3 = phi i32 %next_code_1, void %_Z6lookupPA32768_mP9assoc_memjPbPj.exit.thread, i32 256, void %.lr.ph24.preheader"   --->   Operation 550 'phi' 'next_code_3' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 551 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 551 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 552 [1/1] (0.00ns)   --->   "%empty_51 = trunc i32 %next_code_3" [Server/LZW_new.cpp:274]   --->   Operation 552 'trunc' 'empty_51' <Predicate = (icmp_ln253)> <Delay = 0.00>
ST_29 : Operation 553 [1/1] (0.00ns)   --->   "%specloopname_ln247 = specloopname void @_ssdm_op_SpecLoopName, void @empty_17" [Server/LZW_new.cpp:247]   --->   Operation 553 'specloopname' 'specloopname_ln247' <Predicate = (icmp_ln253)> <Delay = 0.00>
ST_29 : Operation 554 [1/3] (1.27ns)   --->   "%call_ret = call i33 @assoc_lookup, i64 %my_assoc_mem_upper_key_mem, i64 %my_assoc_mem_middle_key_mem, i64 %my_assoc_mem_lower_key_mem, i12 %my_assoc_mem_value, i20 %key_assign" [Server/LZW_new.cpp:187]   --->   Operation 554 'call' 'call_ret' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60)> <Delay = 1.27> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_29 : Operation 555 [1/1] (0.00ns)   --->   "%hit = extractvalue i33 %call_ret" [Server/LZW_new.cpp:187]   --->   Operation 555 'extractvalue' 'hit' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60)> <Delay = 0.00>
ST_29 : Operation 556 [1/1] (0.00ns)   --->   "%code = extractvalue i33 %call_ret" [Server/LZW_new.cpp:187]   --->   Operation 556 'extractvalue' 'code' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60)> <Delay = 0.00>
ST_29 : Operation 557 [1/1] (0.00ns)   --->   "%trunc_ln187 = trunc i32 %code" [Server/LZW_new.cpp:187]   --->   Operation 557 'trunc' 'trunc_ln187' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60)> <Delay = 0.00>
ST_29 : Operation 558 [1/1] (0.60ns)   --->   "%br_ln263 = br i1 %hit, void %.split11.0, void %_Z6lookupPA32768_mP9assoc_memjPbPj.exit.thread" [Server/LZW_new.cpp:263]   --->   Operation 558 'br' 'br_ln263' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60)> <Delay = 0.60>
ST_29 : Operation 559 [1/1] (0.00ns)   --->   "%or_ln1 = bitconcatenate i33 @_ssdm_op_BitConcatenate.i33.i1.i12.i12.i8, i1 1, i12 %empty_51, i12 %trunc_ln262, i8 %next_char" [Server/LZW_new.cpp:82]   --->   Operation 559 'bitconcatenate' 'or_ln1' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & !valid_0)> <Delay = 0.00>
ST_29 : Operation 560 [1/1] (1.35ns)   --->   "%store_ln82 = store i33 %or_ln1, i15 %hash_table_0_addr_2" [Server/LZW_new.cpp:82]   --->   Operation 560 'store' 'store_ln82' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & !valid_0)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 33> <Depth = 32768> <RAM>
ST_29 : Operation 561 [1/1] (0.48ns)   --->   "%br_ln0 = br void"   --->   Operation 561 'br' 'br_ln0' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & !valid_0)> <Delay = 0.48>
ST_29 : Operation 562 [1/1] (0.00ns)   --->   "%br_ln88 = br i1 %valid_1, void %_Z6insertPA32768_mP9assoc_memjjPb.exit.critedge, void %_Z11hash_insertPA32768_mjjPb.exit.i" [Server/LZW_new.cpp:88]   --->   Operation 562 'br' 'br_ln88' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & valid_0)> <Delay = 0.00>
ST_29 : Operation 563 [1/1] (0.00ns)   --->   "%or_ln2 = bitconcatenate i33 @_ssdm_op_BitConcatenate.i33.i1.i12.i12.i8, i1 1, i12 %empty_51, i12 %trunc_ln262, i8 %next_char" [Server/LZW_new.cpp:89]   --->   Operation 563 'bitconcatenate' 'or_ln2' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & valid_0 & !valid_1)> <Delay = 0.00>
ST_29 : Operation 564 [1/1] (1.35ns)   --->   "%store_ln89 = store i33 %or_ln2, i15 %hash_table_1_addr_2" [Server/LZW_new.cpp:89]   --->   Operation 564 'store' 'store_ln89' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & valid_0 & !valid_1)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 33> <Depth = 32768> <RAM>
ST_29 : Operation 565 [1/1] (0.48ns)   --->   "%br_ln0 = br void"   --->   Operation 565 'br' 'br_ln0' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & valid_0 & !valid_1)> <Delay = 0.48>
ST_29 : Operation 566 [1/1] (0.00ns)   --->   "%tmp_25 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %empty_50, i32 6, i32 31" [Server/LZW_new.cpp:119]   --->   Operation 566 'partselect' 'tmp_25' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & valid_0 & valid_1)> <Delay = 0.00>
ST_29 : Operation 567 [1/1] (1.01ns)   --->   "%icmp_ln119 = icmp_eq  i26 %tmp_25, i26 0" [Server/LZW_new.cpp:119]   --->   Operation 567 'icmp' 'icmp_ln119' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & valid_0 & valid_1)> <Delay = 1.01> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 568 [1/1] (0.00ns)   --->   "%br_ln119 = br i1 %icmp_ln119, void %.loopexit12.loopexit, void" [Server/LZW_new.cpp:119]   --->   Operation 568 'br' 'br_ln119' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & valid_0 & valid_1)> <Delay = 0.00>
ST_29 : Operation 569 [1/1] (1.20ns)   --->   "%my_assoc_mem_fill = add i32 %empty_50, i32 1" [Server/LZW_new.cpp:126]   --->   Operation 569 'add' 'my_assoc_mem_fill' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & valid_0 & valid_1 & icmp_ln119)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 570 [1/1] (0.48ns)   --->   "%br_ln128 = br void" [Server/LZW_new.cpp:128]   --->   Operation 570 'br' 'br_ln128' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & valid_0 & valid_1 & icmp_ln119)> <Delay = 0.48>

State 30 <SV = 28> <Delay = 2.01>
ST_30 : Operation 571 [1/1] (0.00ns)   --->   "%zext_ln262 = zext i8 %next_char" [Server/LZW_new.cpp:262]   --->   Operation 571 'zext' 'zext_ln262' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_30 : Operation 572 [1/1] (0.00ns)   --->   "%trunc_ln181_s = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i1.i8, i1 %trunc_ln262_1, i8 %next_char" [Server/LZW_new.cpp:181]   --->   Operation 572 'bitconcatenate' 'trunc_ln181_s' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_30 : Operation 573 [1/1] (0.00ns)   --->   "%zext_ln56 = zext i12 %trunc_ln7" [Server/LZW_new.cpp:56]   --->   Operation 573 'zext' 'zext_ln56' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_30 : Operation 574 [1/1] (0.00ns)   --->   "%zext_ln63 = zext i12 %trunc_ln8" [Server/LZW_new.cpp:63]   --->   Operation 574 'zext' 'zext_ln63' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.00>
ST_30 : Operation 575 [1/1] (0.60ns)   --->   "%br_ln53 = br i1 %and_ln53, void, void %_Z6lookupPA32768_mP9assoc_memjPbPj.exit.thread" [Server/LZW_new.cpp:53]   --->   Operation 575 'br' 'br_ln53' <Predicate = (icmp_ln253 & !icmp_ln255)> <Delay = 0.60>
ST_30 : Operation 576 [1/1] (0.60ns)   --->   "%br_ln60 = br i1 %and_ln60, void %_Z6lookupPA32768_mP9assoc_memjPbPj.exit, void %_Z6lookupPA32768_mP9assoc_memjPbPj.exit.thread" [Server/LZW_new.cpp:60]   --->   Operation 576 'br' 'br_ln60' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53)> <Delay = 0.60>
ST_30 : Operation 577 [1/1] (2.01ns)   --->   "%write_ln174 = write void @_ssdm_op_Write.ap_fifo.volatile.i16P0A, i16 %output_r, i16 %prefix_code_2" [/mnt/pollux/software/xilinx/2020.2/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:174]   --->   Operation 577 'write' 'write_ln174' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit)> <Delay = 2.01> <CoreInst = "FIFO">   --->   Core 78 'FIFO' <Latency = 0> <II = 1> <Delay = 2.01> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 16> <Depth = 500> <FIFO>
ST_30 : Operation 578 [1/1] (0.00ns)   --->   "%br_ln81 = br i1 %valid_0, void %_Z6insertPA32768_mP9assoc_memjjPb.exit.critedge59, void" [Server/LZW_new.cpp:81]   --->   Operation 578 'br' 'br_ln81' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit)> <Delay = 0.00>
ST_30 : Operation 579 [1/1] (1.45ns)   --->   "%shl_ln121 = shl i32 1, i32 %empty_50" [Server/LZW_new.cpp:121]   --->   Operation 579 'shl' 'shl_ln121' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & valid_0 & valid_1 & icmp_ln119)> <Delay = 1.45> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.45> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 580 [1/1] (0.00ns)   --->   "%lshr_ln2 = partselect i2 @_ssdm_op_PartSelect.i2.i16.i32.i32, i16 %prefix_code_2, i32 10, i32 11" [Server/LZW_new.cpp:121]   --->   Operation 580 'partselect' 'lshr_ln2' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & valid_0 & valid_1 & icmp_ln119)> <Delay = 0.00>
ST_30 : Operation 581 [1/1] (0.00ns)   --->   "%zext_ln121 = zext i2 %lshr_ln2" [Server/LZW_new.cpp:121]   --->   Operation 581 'zext' 'zext_ln121' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & valid_0 & valid_1 & icmp_ln119)> <Delay = 0.00>
ST_30 : Operation 582 [1/1] (0.00ns)   --->   "%mem_upper_key_mem_addr = getelementptr i64 %my_assoc_mem_upper_key_mem, i64 0, i64 %zext_ln121" [Server/LZW_new.cpp:121]   --->   Operation 582 'getelementptr' 'mem_upper_key_mem_addr' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & valid_0 & valid_1 & icmp_ln119)> <Delay = 0.00>
ST_30 : Operation 583 [2/2] (1.35ns)   --->   "%mem_upper_key_mem_load = load i9 %mem_upper_key_mem_addr" [Server/LZW_new.cpp:121]   --->   Operation 583 'load' 'mem_upper_key_mem_load' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & valid_0 & valid_1 & icmp_ln119)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 512> <RAM>
ST_30 : Operation 584 [1/1] (0.00ns)   --->   "%lshr_ln3 = partselect i9 @_ssdm_op_PartSelect.i9.i16.i32.i32, i16 %prefix_code_2, i32 1, i32 9" [Server/LZW_new.cpp:122]   --->   Operation 584 'partselect' 'lshr_ln3' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & valid_0 & valid_1 & icmp_ln119)> <Delay = 0.00>
ST_30 : Operation 585 [1/1] (0.00ns)   --->   "%zext_ln122 = zext i9 %lshr_ln3" [Server/LZW_new.cpp:122]   --->   Operation 585 'zext' 'zext_ln122' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & valid_0 & valid_1 & icmp_ln119)> <Delay = 0.00>
ST_30 : Operation 586 [1/1] (0.00ns)   --->   "%mem_middle_key_mem_addr = getelementptr i64 %my_assoc_mem_middle_key_mem, i64 0, i64 %zext_ln122" [Server/LZW_new.cpp:122]   --->   Operation 586 'getelementptr' 'mem_middle_key_mem_addr' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & valid_0 & valid_1 & icmp_ln119)> <Delay = 0.00>
ST_30 : Operation 587 [2/2] (1.35ns)   --->   "%mem_middle_key_mem_load = load i9 %mem_middle_key_mem_addr" [Server/LZW_new.cpp:122]   --->   Operation 587 'load' 'mem_middle_key_mem_load' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & valid_0 & valid_1 & icmp_ln119)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 512> <RAM>
ST_30 : Operation 588 [1/1] (0.00ns)   --->   "%zext_ln123 = zext i9 %trunc_ln181_s" [Server/LZW_new.cpp:123]   --->   Operation 588 'zext' 'zext_ln123' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & valid_0 & valid_1 & icmp_ln119)> <Delay = 0.00>
ST_30 : Operation 589 [1/1] (0.00ns)   --->   "%mem_lower_key_mem_addr = getelementptr i64 %my_assoc_mem_lower_key_mem, i64 0, i64 %zext_ln123" [Server/LZW_new.cpp:123]   --->   Operation 589 'getelementptr' 'mem_lower_key_mem_addr' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & valid_0 & valid_1 & icmp_ln119)> <Delay = 0.00>
ST_30 : Operation 590 [2/2] (1.35ns)   --->   "%mem_lower_key_mem_load = load i9 %mem_lower_key_mem_addr" [Server/LZW_new.cpp:123]   --->   Operation 590 'load' 'mem_lower_key_mem_load' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & valid_0 & valid_1 & icmp_ln119)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 512> <RAM>
ST_30 : Operation 591 [1/1] (0.00ns)   --->   "%zext_ln124 = zext i32 %empty_50" [Server/LZW_new.cpp:124]   --->   Operation 591 'zext' 'zext_ln124' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & valid_0 & valid_1 & icmp_ln119)> <Delay = 0.00>
ST_30 : Operation 592 [1/1] (0.00ns)   --->   "%mem_value_addr = getelementptr i12 %my_assoc_mem_value, i64 0, i64 %zext_ln124" [Server/LZW_new.cpp:124]   --->   Operation 592 'getelementptr' 'mem_value_addr' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & valid_0 & valid_1 & icmp_ln119)> <Delay = 0.00>
ST_30 : Operation 593 [1/1] (0.79ns)   --->   "%store_ln124 = store i12 %empty_51, i6 %mem_value_addr" [Server/LZW_new.cpp:124]   --->   Operation 593 'store' 'store_ln124' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & valid_0 & valid_1 & icmp_ln119)> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 12> <Depth = 64> <RAM>
ST_30 : Operation 594 [1/1] (0.00ns)   --->   "%p_ph = phi i32 %my_assoc_mem_fill, void, i32 %empty_50, void %_Z6insertPA32768_mP9assoc_memjjPb.exit.critedge59, i32 %empty_50, void %_Z6insertPA32768_mP9assoc_memjjPb.exit.critedge"   --->   Operation 594 'phi' 'p_ph' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & icmp_ln119) | (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & !valid_1) | (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & !valid_0)> <Delay = 0.00>
ST_30 : Operation 595 [1/1] (1.20ns)   --->   "%next_code = add i32 %next_code_3, i32 1" [Server/LZW_new.cpp:274]   --->   Operation 595 'add' 'next_code' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & icmp_ln119) | (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & !valid_1) | (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & !valid_0)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 596 [1/1] (0.60ns)   --->   "%br_ln276 = br void %_Z6lookupPA32768_mP9assoc_memjPbPj.exit.thread" [Server/LZW_new.cpp:276]   --->   Operation 596 'br' 'br_ln276' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & icmp_ln119) | (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & !valid_1) | (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & !valid_0)> <Delay = 0.60>

State 31 <SV = 29> <Delay = 3.14>
ST_31 : Operation 597 [1/1] (0.00ns)   --->   "%sext_ln121 = sext i32 %shl_ln121" [Server/LZW_new.cpp:121]   --->   Operation 597 'sext' 'sext_ln121' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & valid_0 & valid_1 & icmp_ln119)> <Delay = 0.00>
ST_31 : Operation 598 [1/2] (1.35ns)   --->   "%mem_upper_key_mem_load = load i9 %mem_upper_key_mem_addr" [Server/LZW_new.cpp:121]   --->   Operation 598 'load' 'mem_upper_key_mem_load' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & valid_0 & valid_1 & icmp_ln119)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 512> <RAM>
ST_31 : Operation 599 [1/1] (0.44ns)   --->   "%or_ln121 = or i64 %mem_upper_key_mem_load, i64 %sext_ln121" [Server/LZW_new.cpp:121]   --->   Operation 599 'or' 'or_ln121' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & valid_0 & valid_1 & icmp_ln119)> <Delay = 0.44> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 600 [1/1] (1.35ns)   --->   "%store_ln121 = store i64 %or_ln121, i9 %mem_upper_key_mem_addr" [Server/LZW_new.cpp:121]   --->   Operation 600 'store' 'store_ln121' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & valid_0 & valid_1 & icmp_ln119)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 512> <RAM>
ST_31 : Operation 601 [1/2] (1.35ns)   --->   "%mem_middle_key_mem_load = load i9 %mem_middle_key_mem_addr" [Server/LZW_new.cpp:122]   --->   Operation 601 'load' 'mem_middle_key_mem_load' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & valid_0 & valid_1 & icmp_ln119)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 512> <RAM>
ST_31 : Operation 602 [1/1] (0.44ns)   --->   "%or_ln122 = or i64 %mem_middle_key_mem_load, i64 %sext_ln121" [Server/LZW_new.cpp:122]   --->   Operation 602 'or' 'or_ln122' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & valid_0 & valid_1 & icmp_ln119)> <Delay = 0.44> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 603 [1/1] (1.35ns)   --->   "%store_ln122 = store i64 %or_ln122, i9 %mem_middle_key_mem_addr" [Server/LZW_new.cpp:122]   --->   Operation 603 'store' 'store_ln122' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & valid_0 & valid_1 & icmp_ln119)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 512> <RAM>
ST_31 : Operation 604 [1/2] (1.35ns)   --->   "%mem_lower_key_mem_load = load i9 %mem_lower_key_mem_addr" [Server/LZW_new.cpp:123]   --->   Operation 604 'load' 'mem_lower_key_mem_load' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & valid_0 & valid_1 & icmp_ln119)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 512> <RAM>
ST_31 : Operation 605 [1/1] (0.44ns)   --->   "%or_ln123 = or i64 %mem_lower_key_mem_load, i64 %sext_ln121" [Server/LZW_new.cpp:123]   --->   Operation 605 'or' 'or_ln123' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & valid_0 & valid_1 & icmp_ln119)> <Delay = 0.44> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 606 [1/1] (1.35ns)   --->   "%store_ln123 = store i64 %or_ln123, i9 %mem_lower_key_mem_addr" [Server/LZW_new.cpp:123]   --->   Operation 606 'store' 'store_ln123' <Predicate = (icmp_ln253 & !icmp_ln255 & !and_ln53 & !and_ln60 & !hit & valid_0 & valid_1 & icmp_ln119)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 512> <RAM>
ST_31 : Operation 607 [1/1] (0.00ns)   --->   "%empty_52 = phi i32 %p_ph, void, i32 %empty_50, void, i32 %empty_50, void %.split9.0, i32 %empty_50, void %_Z6lookupPA32768_mP9assoc_memjPbPj.exit" [Server/LZW_new.cpp:126]   --->   Operation 607 'phi' 'empty_52' <Predicate = (icmp_ln253 & !icmp_ln255 & icmp_ln119) | (icmp_ln253 & !icmp_ln255 & !valid_1) | (icmp_ln253 & !icmp_ln255 & !valid_0) | (icmp_ln253 & !icmp_ln255 & hit) | (icmp_ln253 & !icmp_ln255 & and_ln60) | (icmp_ln253 & !icmp_ln255 & and_ln53)> <Delay = 0.00>
ST_31 : Operation 608 [1/1] (0.00ns)   --->   "%next_code_1 = phi i32 %next_code, void, i32 %next_code_3, void, i32 %next_code_3, void %.split9.0, i32 %next_code_3, void %_Z6lookupPA32768_mP9assoc_memjPbPj.exit"   --->   Operation 608 'phi' 'next_code_1' <Predicate = (icmp_ln253 & !icmp_ln255 & icmp_ln119) | (icmp_ln253 & !icmp_ln255 & !valid_1) | (icmp_ln253 & !icmp_ln255 & !valid_0) | (icmp_ln253 & !icmp_ln255 & hit) | (icmp_ln253 & !icmp_ln255 & and_ln60) | (icmp_ln253 & !icmp_ln255 & and_ln53)> <Delay = 0.00>
ST_31 : Operation 609 [1/1] (0.00ns)   --->   "%prefix_code_1 = phi i16 %zext_ln262, void, i16 %zext_ln63, void, i16 %zext_ln56, void %.split9.0, i16 %trunc_ln187, void %_Z6lookupPA32768_mP9assoc_memjPbPj.exit" [Server/LZW_new.cpp:262]   --->   Operation 609 'phi' 'prefix_code_1' <Predicate = (icmp_ln253 & !icmp_ln255 & icmp_ln119) | (icmp_ln253 & !icmp_ln255 & !valid_1) | (icmp_ln253 & !icmp_ln255 & !valid_0) | (icmp_ln253 & !icmp_ln255 & hit) | (icmp_ln253 & !icmp_ln255 & and_ln60) | (icmp_ln253 & !icmp_ln255 & and_ln53)> <Delay = 0.00>
ST_31 : Operation 610 [1/1] (0.00ns)   --->   "%br_ln0 = br void %.lr.ph24"   --->   Operation 610 'br' 'br_ln0' <Predicate = (icmp_ln253 & !icmp_ln255 & icmp_ln119) | (icmp_ln253 & !icmp_ln255 & !valid_1) | (icmp_ln253 & !icmp_ln255 & !valid_0) | (icmp_ln253 & !icmp_ln255 & hit) | (icmp_ln253 & !icmp_ln255 & and_ln60) | (icmp_ln253 & !icmp_ln255 & and_ln53)> <Delay = 0.00>

State 32 <SV = 28> <Delay = 0.00>
ST_32 : Operation 611 [1/1] (0.00ns)   --->   "%br_ln0 = br void %.loopexit12"   --->   Operation 611 'br' 'br_ln0' <Predicate = (!tmp)> <Delay = 0.00>
ST_32 : Operation 612 [1/1] (0.00ns)   --->   "%ret_ln284 = ret" [Server/LZW_new.cpp:284]   --->   Operation 612 'ret' 'ret_ln284' <Predicate = true> <Delay = 0.00>

State 33 <SV = 28> <Delay = 2.01>
ST_33 : Operation 613 [1/1] (2.01ns)   --->   "%write_ln174 = write void @_ssdm_op_Write.ap_fifo.volatile.i16P0A, i16 %output_r, i16 %prefix_code_2" [/mnt/pollux/software/xilinx/2020.2/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:174]   --->   Operation 613 'write' 'write_ln174' <Predicate = true> <Delay = 2.01> <CoreInst = "FIFO">   --->   Core 78 'FIFO' <Latency = 0> <II = 1> <Delay = 2.01> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 16> <Depth = 500> <FIFO>
ST_33 : Operation 614 [1/1] (0.00ns)   --->   "%br_ln258 = br void %.loopexit" [Server/LZW_new.cpp:258]   --->   Operation 614 'br' 'br_ln258' <Predicate = true> <Delay = 0.00>

State 34 <SV = 28> <Delay = 0.00>
ST_34 : Operation 615 [1/1] (0.00ns)   --->   "%br_ln0 = br void %.loopexit"   --->   Operation 615 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 35 <SV = 29> <Delay = 2.01>
ST_35 : Operation 616 [1/1] (2.01ns)   --->   "%write_ln174 = write void @_ssdm_op_Write.ap_fifo.volatile.i16P0A, i16 %output_r, i16 61440" [/mnt/pollux/software/xilinx/2020.2/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:174]   --->   Operation 616 'write' 'write_ln174' <Predicate = true> <Delay = 2.01> <CoreInst = "FIFO">   --->   Core 78 'FIFO' <Latency = 0> <II = 1> <Delay = 2.01> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 16> <Depth = 500> <FIFO>
ST_35 : Operation 617 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 617 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 6.67ns, clock uncertainty: 1.8ns.

 <State 1>: 0.489ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('c') with incoming values : ('c', Server/LZW_new.cpp:215) [15]  (0.489 ns)

 <State 2>: 3.1ns
The critical path consists of the following:
	fifo read on port 'input_r' (/mnt/pollux/software/xilinx/2020.2/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:145) [22]  (2.01 ns)
	'mul' operation of DSP[27] ('mul_ln220', Server/LZW_new.cpp:220) [26]  (1.09 ns)

 <State 3>: 1.09ns
The critical path consists of the following:
	'mul' operation of DSP[27] ('mul_ln220', Server/LZW_new.cpp:220) [26]  (1.09 ns)

 <State 4>: 2.84ns
The critical path consists of the following:
	fifo read on port 'input_r' (/mnt/pollux/software/xilinx/2020.2/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:145) [24]  (2.01 ns)
	'add' operation of DSP[27] ('len', Server/LZW_new.cpp:220) [27]  (0.831 ns)

 <State 5>: 1.7ns
The critical path consists of the following:
	'add' operation of DSP[27] ('len', Server/LZW_new.cpp:220) [27]  (0.831 ns)
	'icmp' operation ('icmp_ln224', Server/LZW_new.cpp:224) [28]  (0.865 ns)

 <State 6>: 1ns
The critical path consists of the following:
	'phi' operation ('i', Server/LZW_new.cpp:224) with incoming values : ('add_ln224', Server/LZW_new.cpp:224) [31]  (0 ns)
	'add' operation ('add_ln224', Server/LZW_new.cpp:224) [32]  (1 ns)

 <State 7>: 3.37ns
The critical path consists of the following:
	fifo read on port 'input_r' (/mnt/pollux/software/xilinx/2020.2/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:145) [40]  (2.01 ns)
	'store' operation ('store_ln225', Server/LZW_new.cpp:225) of variable 'tmp', /mnt/pollux/software/xilinx/2020.2/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:145 on array 'temp_chunk', Server/LZW_new.cpp:213 [42]  (1.35 ns)

 <State 8>: 0.489ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i', Server/LZW_new.cpp:234) with incoming values : ('add_ln234', Server/LZW_new.cpp:234) [47]  (0.489 ns)

 <State 9>: 1.35ns
The critical path consists of the following:
	'phi' operation ('i', Server/LZW_new.cpp:234) with incoming values : ('add_ln234', Server/LZW_new.cpp:234) [47]  (0 ns)
	'getelementptr' operation ('hash_table_0_addr', Server/LZW_new.cpp:237) [57]  (0 ns)
	'store' operation ('store_ln237', Server/LZW_new.cpp:237) of constant 0 on array 'hash_table[0]', Server/LZW_new.cpp:230 [58]  (1.35 ns)

 <State 10>: 0.489ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i', Server/LZW_new.cpp:241) with incoming values : ('add_ln241', Server/LZW_new.cpp:241) [71]  (0.489 ns)

 <State 11>: 2.21ns
The critical path consists of the following:
	'phi' operation ('i', Server/LZW_new.cpp:241) with incoming values : ('add_ln241', Server/LZW_new.cpp:241) [71]  (0 ns)
	'getelementptr' operation ('my_assoc_mem_upper_key_mem_addr', Server/LZW_new.cpp:243) [80]  (0 ns)
	'store' operation ('store_ln243', Server/LZW_new.cpp:243) of constant 0 on array 'my_assoc_mem.upper_key_mem', Server/LZW_new.cpp:231 [81]  (1.35 ns)
	blocking operation 0.859 ns on control path)

 <State 12>: 1.35ns
The critical path consists of the following:
	'load' operation ('prefix_code', Server/LZW_new.cpp:248) on array 'temp_chunk', Server/LZW_new.cpp:213 [88]  (1.35 ns)

 <State 13>: 1.35ns
The critical path consists of the following:
	'load' operation ('prefix_code', Server/LZW_new.cpp:248) on array 'temp_chunk', Server/LZW_new.cpp:213 [88]  (1.35 ns)

 <State 14>: 2.35ns
The critical path consists of the following:
	'phi' operation ('i', Server/LZW_new.cpp:255) with incoming values : ('add_ln255', Server/LZW_new.cpp:255) [94]  (0 ns)
	'add' operation ('add_ln255', Server/LZW_new.cpp:255) [100]  (1 ns)
	'getelementptr' operation ('temp_chunk_addr_2', Server/LZW_new.cpp:260) [109]  (0 ns)
	'load' operation ('next_char', Server/LZW_new.cpp:260) on array 'temp_chunk', Server/LZW_new.cpp:213 [110]  (1.35 ns)

 <State 15>: 3.79ns
The critical path consists of the following:
	'load' operation ('next_char', Server/LZW_new.cpp:260) on array 'temp_chunk', Server/LZW_new.cpp:213 [110]  (1.35 ns)
	'add' operation ('add_ln25', Server/LZW_new.cpp:25) [121]  (0.948 ns)
	'add' operation ('add_ln26', Server/LZW_new.cpp:26) [124]  (1.09 ns)
	'xor' operation ('xor_ln27', Server/LZW_new.cpp:27) [127]  (0.401 ns)

 <State 16>: 4.37ns
The critical path consists of the following:
	'add' operation ('add_ln25_1', Server/LZW_new.cpp:25) [133]  (1.09 ns)
	'add' operation ('add_ln26_1', Server/LZW_new.cpp:26) [140]  (1.2 ns)
	'xor' operation ('xor_ln27_1', Server/LZW_new.cpp:27) [147]  (0 ns)
	'add' operation ('add_ln25_2', Server/LZW_new.cpp:25) [154]  (1.2 ns)
	'add' operation ('add_ln25_21', Server/LZW_new.cpp:25) [171]  (0.878 ns)

 <State 17>: 4.81ns
The critical path consists of the following:
	'shl' operation ('shl_ln26', Server/LZW_new.cpp:26) [155]  (0 ns)
	'add' operation ('add_ln26_2', Server/LZW_new.cpp:26) [160]  (1.2 ns)
	'xor' operation ('xor_ln27_2', Server/LZW_new.cpp:27) [167]  (0 ns)
	'add' operation ('add_ln25_3', Server/LZW_new.cpp:25) [175]  (1.2 ns)
	'add' operation ('add_ln26_3', Server/LZW_new.cpp:26) [181]  (1.2 ns)
	'xor' operation ('xor_ln27_3', Server/LZW_new.cpp:27) [188]  (0 ns)
	'add' operation ('add_ln25_4', Server/LZW_new.cpp:25) [196]  (1.2 ns)

 <State 18>: 4.81ns
The critical path consists of the following:
	'shl' operation ('shl_ln26_3', Server/LZW_new.cpp:26) [197]  (0 ns)
	'add' operation ('add_ln26_4', Server/LZW_new.cpp:26) [202]  (1.2 ns)
	'xor' operation ('xor_ln27_4', Server/LZW_new.cpp:27) [209]  (0 ns)
	'add' operation ('add_ln25_5', Server/LZW_new.cpp:25) [217]  (1.2 ns)
	'add' operation ('add_ln26_5', Server/LZW_new.cpp:26) [223]  (1.2 ns)
	'xor' operation ('xor_ln27_5', Server/LZW_new.cpp:27) [230]  (0 ns)
	'add' operation ('add_ln25_6', Server/LZW_new.cpp:25) [238]  (1.2 ns)

 <State 19>: 4.81ns
The critical path consists of the following:
	'shl' operation ('shl_ln26_5', Server/LZW_new.cpp:26) [239]  (0 ns)
	'add' operation ('add_ln26_6', Server/LZW_new.cpp:26) [244]  (1.2 ns)
	'xor' operation ('xor_ln27_6', Server/LZW_new.cpp:27) [251]  (0 ns)
	'add' operation ('add_ln25_7', Server/LZW_new.cpp:25) [258]  (1.2 ns)
	'add' operation ('add_ln26_7', Server/LZW_new.cpp:26) [264]  (1.2 ns)
	'xor' operation ('xor_ln27_7', Server/LZW_new.cpp:27) [271]  (0 ns)
	'add' operation ('add_ln25_8', Server/LZW_new.cpp:25) [279]  (1.2 ns)

 <State 20>: 4.81ns
The critical path consists of the following:
	'shl' operation ('shl_ln26_7', Server/LZW_new.cpp:26) [280]  (0 ns)
	'add' operation ('add_ln26_8', Server/LZW_new.cpp:26) [285]  (1.2 ns)
	'xor' operation ('xor_ln27_8', Server/LZW_new.cpp:27) [292]  (0 ns)
	'add' operation ('add_ln25_9', Server/LZW_new.cpp:25) [300]  (1.2 ns)
	'add' operation ('add_ln26_9', Server/LZW_new.cpp:26) [306]  (1.2 ns)
	'xor' operation ('xor_ln27_9', Server/LZW_new.cpp:27) [313]  (0 ns)
	'add' operation ('add_ln25_10', Server/LZW_new.cpp:25) [321]  (1.2 ns)

 <State 21>: 4.81ns
The critical path consists of the following:
	'shl' operation ('shl_ln26_9', Server/LZW_new.cpp:26) [322]  (0 ns)
	'add' operation ('add_ln26_10', Server/LZW_new.cpp:26) [327]  (1.2 ns)
	'xor' operation ('xor_ln27_10', Server/LZW_new.cpp:27) [334]  (0 ns)
	'add' operation ('add_ln25_11', Server/LZW_new.cpp:25) [342]  (1.2 ns)
	'add' operation ('add_ln26_11', Server/LZW_new.cpp:26) [348]  (1.2 ns)
	'xor' operation ('xor_ln27_11', Server/LZW_new.cpp:27) [355]  (0 ns)
	'add' operation ('add_ln25_12', Server/LZW_new.cpp:25) [363]  (1.2 ns)

 <State 22>: 4.81ns
The critical path consists of the following:
	'shl' operation ('shl_ln26_11', Server/LZW_new.cpp:26) [364]  (0 ns)
	'add' operation ('add_ln26_12', Server/LZW_new.cpp:26) [369]  (1.2 ns)
	'xor' operation ('xor_ln27_12', Server/LZW_new.cpp:27) [376]  (0 ns)
	'add' operation ('add_ln25_13', Server/LZW_new.cpp:25) [385]  (1.2 ns)
	'add' operation ('add_ln26_13', Server/LZW_new.cpp:26) [390]  (1.2 ns)
	'xor' operation ('xor_ln27_13', Server/LZW_new.cpp:27) [397]  (0 ns)
	'add' operation ('add_ln25_14', Server/LZW_new.cpp:25) [405]  (1.2 ns)

 <State 23>: 4.81ns
The critical path consists of the following:
	'shl' operation ('shl_ln26_13', Server/LZW_new.cpp:26) [406]  (0 ns)
	'add' operation ('add_ln26_14', Server/LZW_new.cpp:26) [411]  (1.2 ns)
	'xor' operation ('xor_ln27_14', Server/LZW_new.cpp:27) [418]  (0 ns)
	'add' operation ('add_ln25_15', Server/LZW_new.cpp:25) [426]  (1.2 ns)
	'add' operation ('add_ln26_15', Server/LZW_new.cpp:26) [432]  (1.2 ns)
	'xor' operation ('xor_ln27_15', Server/LZW_new.cpp:27) [439]  (0 ns)
	'add' operation ('add_ln25_16', Server/LZW_new.cpp:25) [447]  (1.2 ns)

 <State 24>: 4.81ns
The critical path consists of the following:
	'shl' operation ('shl_ln26_15', Server/LZW_new.cpp:26) [448]  (0 ns)
	'add' operation ('add_ln26_16', Server/LZW_new.cpp:26) [453]  (1.2 ns)
	'xor' operation ('xor_ln27_16', Server/LZW_new.cpp:27) [460]  (0 ns)
	'add' operation ('add_ln25_17', Server/LZW_new.cpp:25) [468]  (1.2 ns)
	'add' operation ('add_ln26_17', Server/LZW_new.cpp:26) [474]  (1.2 ns)
	'xor' operation ('xor_ln27_17', Server/LZW_new.cpp:27) [481]  (0 ns)
	'add' operation ('add_ln25_18', Server/LZW_new.cpp:25) [489]  (1.2 ns)

 <State 25>: 4.44ns
The critical path consists of the following:
	'shl' operation ('shl_ln26_17', Server/LZW_new.cpp:26) [490]  (0 ns)
	'add' operation ('add_ln26_18', Server/LZW_new.cpp:26) [495]  (1.2 ns)
	'xor' operation ('xor_ln27_18', Server/LZW_new.cpp:27) [504]  (0.332 ns)
	'add' operation ('hashed', Server/LZW_new.cpp:29) [509]  (1.13 ns)
	'xor' operation ('hashed', Server/LZW_new.cpp:30) [512]  (0.421 ns)
	'getelementptr' operation ('hash_table_0_addr_2', Server/LZW_new.cpp:41) [514]  (0 ns)
	'load' operation ('lookup_0', Server/LZW_new.cpp:41) on array 'hash_table[0]', Server/LZW_new.cpp:230 [515]  (1.35 ns)

 <State 26>: 2.61ns
The critical path consists of the following:
	'load' operation ('lookup_1', Server/LZW_new.cpp:42) on array 'hash_table[1]', Server/LZW_new.cpp:230 [517]  (1.35 ns)
	'icmp' operation ('icmp_ln60', Server/LZW_new.cpp:60) [530]  (0.927 ns)
	'and' operation ('and_ln60', Server/LZW_new.cpp:60) [531]  (0.331 ns)

 <State 27>: 1.35ns
The critical path consists of the following:
	'call' operation ('call_ret', Server/LZW_new.cpp:187) to 'assoc_lookup' [534]  (1.35 ns)

 <State 28>: 3.52ns
The critical path consists of the following:
	'call' operation ('call_ret', Server/LZW_new.cpp:187) to 'assoc_lookup' [534]  (3.52 ns)

 <State 29>: 2.63ns
The critical path consists of the following:
	'call' operation ('call_ret', Server/LZW_new.cpp:187) to 'assoc_lookup' [534]  (1.28 ns)
	multiplexor before 'phi' operation ('empty_52', Server/LZW_new.cpp:126) with incoming values : ('my_assoc_mem.fill', Server/LZW_new.cpp:126) [588]  (0.605 ns)
	blocking operation 0.747 ns on control path)

 <State 30>: 2.01ns
The critical path consists of the following:
	fifo write on port 'output_r' (/mnt/pollux/software/xilinx/2020.2/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:174) [540]  (2.01 ns)

 <State 31>: 3.15ns
The critical path consists of the following:
	'load' operation ('mem_upper_key_mem_load', Server/LZW_new.cpp:121) on array 'my_assoc_mem.upper_key_mem', Server/LZW_new.cpp:231 [562]  (1.35 ns)
	'or' operation ('or_ln121', Server/LZW_new.cpp:121) [563]  (0.441 ns)
	'store' operation ('store_ln121', Server/LZW_new.cpp:121) of variable 'or_ln121', Server/LZW_new.cpp:121 on array 'my_assoc_mem.upper_key_mem', Server/LZW_new.cpp:231 [564]  (1.35 ns)

 <State 32>: 0ns
The critical path consists of the following:

 <State 33>: 2.01ns
The critical path consists of the following:
	fifo write on port 'output_r' (/mnt/pollux/software/xilinx/2020.2/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:174) [593]  (2.01 ns)

 <State 34>: 0ns
The critical path consists of the following:

 <State 35>: 2.01ns
The critical path consists of the following:
	fifo write on port 'output_r' (/mnt/pollux/software/xilinx/2020.2/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:174) [598]  (2.01 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
